import{qJ as b,l_ as x,aE as u,ap as S,M as E,ay as V,qK as v,lV as y,b7 as m,g6 as _,gL as C,eK as l,m7 as $,qL as P,qM as w,lq as h,B as j,E as I,n0 as T}from"./vendor.fe24faac.js";let f=class{constructor(){this._idToComponent=new Map,this._components=new b(t=>t.bounds),this._edges=new b(t=>t.bounds),this._tmpLineSegment=x(),this._tmpP1=u(),this._tmpP2=u(),this._tmpP3=u(),this.remoteClient=null}async fetchCandidates(t,e){await Promise.resolve(),S(e),await this._ensureEdgeLocations(t,e);const n=[];return this._edges.forEachNeighbor(s=>this._addCandidates(t,s,n),t.bounds),{result:{candidates:n}}}async _ensureEdgeLocations(t,e){const n=[];if(this._components.forEachNeighbor(i=>{if(E(i.info)){const{id:a,uid:d}=i;n.push({id:a,uid:d})}},t.bounds),!n.length)return;const s={components:n},o=await this.remoteClient.invoke("fetchAllEdgeLocations",s,V(e,{}));for(const i of o.components)this._setFetchEdgeLocations(i)}async add(t){const e=new p(t.id,t.bounds);return this._idToComponent.set(e.id,e),this._components.add([e]),{result:{}}}async remove(t){const e=this._idToComponent.get(t.id);if(e){const n=[];this._edges.forEachNeighbor(s=>{s.component===e&&n.push(s)},e.bounds),this._edges.remove(n),this._components.remove([e]),this._idToComponent.delete(e.id)}return{result:{}}}_setFetchEdgeLocations(t){const e=this._idToComponent.get(t.id);if(E(e)||t.uid!==e.uid)return;const n=v.createView(t.locations),s=new Array(n.count),o=u(),i=u();for(let c=0;c<n.count;c++){const g=T(),r=l(g);n.position0.getVec(c,o),n.position1.getVec(c,i),y(r,r,o,.5),y(r,r,i,.5),m(r,r,t.origin),g[3]=_(r,o);const L=new q(e,c,g);s[c]=L}this._edges.add(s);const{objectIds:a,origin:d}=t;e.info={locations:n,objectIds:a,origin:d}}_addCandidates(t,e,n){const{locations:s,origin:o,objectIds:i}=e.component.info,a=s.position0.getVec(e.index,this._tmpP1),d=s.position1.getVec(e.index,this._tmpP2);m(a,a,o),m(d,d,o);const c=i[s.componentIndex.get(e.index)];this._addEdgeCandidate(t,c,a,d,n),this._addVertexCandidate(t,c,a,n),this._addVertexCandidate(t,c,d,n)}_addEdgeCandidate(t,e,n,s,o){if(!(t.types&C.EDGE))return;const i=l(t.bounds),a=$(n,s,this._tmpLineSegment),d=P(a,i,this._tmpP3);if(!w(t.bounds,d))return null;o.push({type:"edge",objectId:e,target:h(d),distance:_(i,d),start:h(n),end:h(s)})}_addVertexCandidate(t,e,n,s){if(!(t.types&C.VERTEX))return;const o=l(t.bounds);if(!w(t.bounds,n))return null;s.push({type:"vertex",objectId:e,target:h(n),distance:_(o,n)})}};function M(){return new f}f=j([I("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],f);class p{constructor(e,n){this.id=e,this.bounds=n,this.info=null,this.uid=++p.uid}}p.uid=0;class q{constructor(e,n,s){this.component=e,this.index=n,this.bounds=s}}export{f as SceneLayerSnappingSourceWorker,M as default};
