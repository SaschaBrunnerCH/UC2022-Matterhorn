var Ne=Object.defineProperty;var ge=Object.getOwnPropertySymbols;var Be=Object.prototype.hasOwnProperty,He=Object.prototype.propertyIsEnumerable;var me=(t,e,i)=>e in t?Ne(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i,_e=(t,e)=>{for(var i in e||(e={}))Be.call(e,i)&&me(t,i,e[i]);if(ge)for(var i of ge(e))He.call(e,i)&&me(t,i,e[i]);return t};import{y as Ye,cx as ke,aC as c,k6 as Ie,k7 as se,g5 as $,hY as j,g4 as Ee,b3 as We,b5 as Q,b6 as J,g3 as Xe,k8 as Ze,k9 as re,az as K,ka as ne,kb as Ue,fB as Je,g8 as ae,bf as je,kc as Ke,hP as fe,kd as Qe,ke as Le,kf as ye,iS as et,g7 as ee,hK as ve,b4 as Se,kg as tt,bB as it,kh as st,ki as we,kj as rt,kk as nt,F as _,aw as qe,kl as at,z as o,A as l,B as te,D as ue,Y as q,Z as Ce,km as ot,kn as ht,ar as lt,af as dt,v as Fe,aB as be,N as v,ko as ct,a5 as oe,kp as ut,I as F,bg as U,b7 as pt,dk as gt,dl as mt,d4 as T,dq as Pe,ds as _t,dn as ft,kq as Me,dx as Lt,dy as I,kr as yt,dA as Y,dE as vt,dF as St,dG as wt,dH as Ct,dI as bt,dJ as Pt,dL as Mt,dM as At,dN as $t,dO as Vt,dB as x,dD as Rt,dT as zt,dV as Gt,bI as X,dv as Ae,dX as Dt,dY as xt,hM as Ot,d_ as Tt,ks as G,fc as $e,kt as Ve,fY as Re,f8 as kt,d3 as It,eJ as Et,ku as Wt,kv as Ut,kw as jt,kx as qt,iY as Ft,ky as Nt,kz as Bt,kA as Ht,kB as Yt,kC as Xt,kD as Zt}from"./vendor.508dc62e.js";import{n as Jt}from"./AnalysisView3D.ccf005bc.js";import{c as he,e as le,t as Kt}from"./UnitNormalizer.06d0c79b.js";import{o as E,a as ze,v as Qt}from"./quantityUtils.759564e3.js";import{geodesicArea as ei}from"./geometryEngine.9e6ec958.js";import{v as Ge}from"./euclideanAreaMeasurementUtils.c268a855.js";import{a as ti}from"./projectionUtils.f1f50e36.js";import{S as De,g as ii,x as si,p as ri}from"./EditGeometryOperations.ebe2fe4a.js";import{g as xe}from"./quantityFormatUtils.d237b3c9.js";import{v as Z,m as Oe,l as de}from"./Segment.bf98ecbd.js";import{C as W}from"./LineVisualElement.4bd38e56.js";import{n as ni}from"./Object3DVisualElement.0959ced1.js";function ai(t,e){const i=e.center;We(i,0,0,0);for(let r=0;r<t.length;++r)Q(i,i,t[r]);J(i,i,1/t.length);let s=0;for(let r=0;r<t.length;++r)s=Math.max(s,Xe(i,t[r]));e.radius=Math.sqrt(s)}function oi(t,e){if(t.length<3)throw new Error("need at least 3 points to fit a plane");Ze(t[0],t[1],t[2],e)}function hi(t,e){return $(t,e)+t[3]}function li(t,e,i){return j(t,V,i)&&j(e,R,i)?Ee(V,R):0}function di(t,e){if(!re(t,V)||!re(e,R))return 0;const i={distance:null};return Ie(i,[V[0],V[1]],[R[0],R[1]]),i.distance}function ci(t,e,i){const s={distance:null};return Ie(s,[t[0],t[1]],[e[0],e[1]],i),s.distance}function ui(t,e,i,s){const r=gi;return se(t,s,V)&&se(e,s,R)&&se(i,s,ce)?(r.setPoint(0,0,V),r.setPoint(0,1,R),r.setPoint(0,2,ce),Math.abs(ei(r,"square-meters"))):0}function pi(t,e=null,i=!0){const r=(n,a)=>{if(a[0]===0&&a[1]===0&&a[2]===0)return!1;for(let h=0;h<n.length;++h)if($(a,n[h])<-1e-6)return!1;return!0};if(t.length===0)return!1;if(t.length===1)return e&&K(e,t[0]),!0;We(S,0,0,0);for(let n=0;n<t.length;++n)Q(S,S,t[n]);if(ne(S,S),r(t,S))return e&&K(e,S),!0;if(!i)return!1;for(let n=0;n<t.length;++n)for(let a=0;a<t.length;++a)if(n!==a&&(Ue(S,t[n],t[a]),ne(S,S),r(t,S)))return e&&K(e,S),!0;return!1}const V=c(),R=c(),ce=c(),gi=new Ye({rings:[[V,R,ce]],spatialReference:ke.WGS84}),S=c();class mi{constructor(e,i){this.positionsWorldCoords=[],this.positionsRenderCoords=[],this.positionsProjectedWorldCoords=[],this.positionsFittedRenderCoords=[],this.positionsGeographic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.areaCentroidWorldCoords=c(),this.areaCentroidRenderCoords=c(),this.geodesicAreaCentroidRenderCoords=c(),this._length=0,this._centroidRenderCoords=c(),this._planeWorldCoords=Je(),this._worldUp=c(),this._worldTangent=c(),this._frame=[c(),c(),c()],this._pathVersion=-1,this._validMeasurement=!1,this._hasCursorPoint=!1,this._mode=null,this._tempU=c(),this._tempV=c(),this._tempVec3=c(),this._tempSphere={center:c(),radius:0},this._sceneView=e,this.unitNormalizer=i}update(e,i,s,r,n,a,h){const d=this.unitNormalizer,p=this._sceneView.renderSpatialReference,u=this.unitNormalizer.spatialReference,m=_(i);if(this._pathVersion===e.version&&this._validMeasurement===r&&!h&&this._hasCursorPoint===m&&this._mode===a)return!e.isValidPolygon&&(this._updateCursorSegmentLength(e,i),!0);this._pathVersion=e.version,this._validMeasurement=r,this._hasCursorPoint=m;const g=e.numVertices;this._resize(g);const y=ae(s.spatialReference),b=je(s.spatialReference,y)&&Ke(s.spatialReference),{positionsGeographic:P,positionsWorldCoords:N,positionsRenderCoords:M,positionsSpherical:D}=this;e.forEachVertexPosition((L,C)=>{_i(s.elevationProvider,L),j(L,N[C],u),j(L,M[C],p),b&&(re(L,P[C]),j(L,D[C],y),ne(D[C],D[C]))});const B=this._updatePathLengths(r);if(this.pathLength=this._length>1?E(d.normalizeDistance(B),"meters"):null,b){const L=this._updateGeodesicPathLengths(r,u);this.geodesicPathLength=this._length>1?E(L,"meters"):null}else this.geodesicPathLength=null;return this._updateCursorSegmentLength(e,i),this._updateMode(e,a),r?(this._updateArea(s,d,p,u,n),b&&this._updateGeodesicArea(s),!0):(this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),this.geodesicIntersectingSegments.clear(),!0)}getData(){return{positionsWorldCoords:this.positionsWorldCoords,positionsRenderCoords:this.positionsRenderCoords,positionsProjectedWorldCoords:this.positionsProjectedWorldCoords,positionsFittedRenderCoords:this.positionsFittedRenderCoords,positionsGeographic:this.positionsGeographic,positionsSpherical:this.positionsSpherical,positionsStereographic:this.positionsStereographic,pathSegmentLengths:this.pathSegmentLengths,geodesicPathSegmentLengths:this.geodesicPathSegmentLengths,perimeterSegmentLengths:this.perimeterSegmentLengths,intersectingSegments:this.intersectingSegments,geodesicIntersectingSegments:this.geodesicIntersectingSegments,triangleIndices:this.triangleIndices,geodesicTriangleIndices:this.geodesicTriangleIndices,areaCentroidWorldCoords:this.areaCentroidWorldCoords,areaCentroidRenderCoords:this.areaCentroidRenderCoords,geodesicAreaCentroidRenderCoords:this.geodesicAreaCentroidRenderCoords,fittingMode:this.fittingMode,area:this.area,geodesicArea:this.geodesicArea,pathLength:this.pathLength,geodesicPathLength:this.geodesicPathLength,perimeterLength:this.perimeterLength,cursorSegmentLength:this.cursorSegmentLength,geodesicCursorSegmentLength:this.geodesicCursorSegmentLength,unitNormalizer:this.unitNormalizer,actualMeasurementMode:this.actualMeasurementMode}}_resize(e){for(e<this._length&&(this.positionsWorldCoords.length=e,this.positionsRenderCoords.length=e,this.positionsProjectedWorldCoords.length=e,this.positionsFittedRenderCoords.length=e,this.positionsGeographic.length=e,this.positionsSpherical.length=e,this.positionsStereographic.length=e,this.pathSegmentLengths.length=e,this.geodesicPathSegmentLengths.length=e,this.perimeterSegmentLengths.length=e,this._length=e);this._length<e;)this.positionsWorldCoords.push(c()),this.positionsRenderCoords.push(c()),this.positionsProjectedWorldCoords.push(fe()),this.positionsFittedRenderCoords.push(c()),this.positionsGeographic.push(c()),this.positionsSpherical.push(c()),this.positionsStereographic.push(fe()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length}_updatePathLengths(e){const i=this.positionsWorldCoords,s=this.pathSegmentLengths;let r=0;for(let n=0;n<this._length;++n){const a=s[n]=Ee(i[n],i[(n+1)%this._length]);(n<this._length-1||e)&&(r+=a)}return r}_updateGeodesicPathLengths(e,i){const s=this.positionsGeographic,r=this.geodesicPathSegmentLengths;let n=0;for(let a=0;a<this._length;++a){const h=r[a]=ci(s[a],s[(a+1)%this._length],i);(a<this._length-1||e)&&(n+=h)}return n}_updateArea(e,i,s,r,n){const a=e.renderCoordsHelper,h=this.positionsWorldCoords,d=this.positionsRenderCoords,p=this.positionsProjectedWorldCoords,u=this.positionsFittedRenderCoords,m=this._planeWorldCoords,g=this._centroidRenderCoords;he(d,g),a.worldUpAtPosition(g,this._worldUp),a.worldBasisAtPosition(g,Qe.X,this._worldTangent),Le(g,this._worldUp,s,this._worldUp,r),Le(g,this._worldTangent,s,this._worldTangent,r),h.length>2&&oi(h,m),this.fittingMode=this._selectFittingMode(m,h,this._worldUp,n);let y=0;if(this.fittingMode==="horizontal"){let L=-1/0;d.forEach((C,H)=>{const pe=a.getAltitude(d[H]);pe>L&&(L=pe,y=H)})}const b=h[y];let P=m,N=this._worldTangent;this.fittingMode==="horizontal"?P=this._worldUp:this.fittingMode==="vertical"&&(P=this._tempVec3,N=this._worldUp,ye(m,this._worldUp,P)),K(this._frame[2],P),ye(N,P,this._frame[0]),Ue(this._frame[1],this._frame[0],this._frame[2]),et(this._frame[1],this._frame[1]);const M=this._tempVec3,D=this._tempU,B=this._tempV;for(let L=0;L<this._length;++L){const C=p[L],H=u[L];ee(M,h[L],b),ve(C,$(this._frame[0],M),$(this._frame[1],M)),J(D,this._frame[0],C[0]),J(B,this._frame[1],C[1]),Q(M,D,B),Q(M,M,b),Se(M,r,H,s)}this.perimeterLength=this._length>0?E(i.normalizeDistance(this._updatePerimeterLengths()),"meters"):null,he(u,this.areaCentroidRenderCoords),Se(this.areaCentroidRenderCoords,s,this.areaCentroidWorldCoords,r),this._updateIntersectingSegments(),this.area=this.intersectingSegments.size===0?ze(i.normalizeArea(this._computeArea()),"square-meters"):null}_updateGeodesicArea(e){const{renderCoordsHelper:i,spatialReference:s}=e,{positionsSpherical:r,positionsStereographic:n}=this,a=this._tempVec3,h=pi(r,a);if(!h)return void(this.geodesicArea=null);const d=this._tempU,p=this._tempV;tt(a,d,p);for(let u=0;u<this._length;++u){const m=$(r[u],d),g=$(r[u],p),y=$(r[u],a);ve(n[u],m/y,g/y)}J(a,a,it(s).radius),i.toRenderCoords(a,ae(s),this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=h&&this.geodesicIntersectingSegments.size===0?ze(this._computeGeodesicArea(),"square-meters"):null}_updatePerimeterLengths(){const e=this.positionsProjectedWorldCoords,i=this.perimeterSegmentLengths;let s=0;for(let r=0;r<this._length;++r)s+=i[r]=st(e[r],e[(r+1)%this._length]);return s}_updateIntersectingSegments(){const e=this.positionsProjectedWorldCoords,i=this.intersectingSegments;i.clear();for(let s=0;s<this._length;++s)for(let r=s+2;r<this._length;++r){if((r+1)%this._length===s)continue;const n=e[s],a=e[(s+1)%this._length],h=e[r],d=e[(r+1)%this._length];we(n,a,h,d)&&(i.add(s),i.add(r))}}_computeArea(){const e=this.positionsProjectedWorldCoords,i=this.triangleIndices=new Uint32Array(Ge(e));let s=0;for(let r=0;r<i.length;r+=3)s+=rt(e[i[r]],e[i[r+1]],e[i[r+2]]);return s}_updateGeodesicIntersectingSegments(){const e=this.positionsStereographic,i=this.geodesicIntersectingSegments;i.clear();for(let s=0;s<this._length;++s)for(let r=s+2;r<this._length;++r){if((r+1)%this._length===s)continue;const n=e[s],a=e[(s+1)%this._length],h=e[r],d=e[(r+1)%this._length];we(n,a,h,d)&&(i.add(s),i.add(r))}}_computeGeodesicArea(){const e=this.positionsGeographic,i=this.positionsStereographic,s=this.geodesicTriangleIndices=new Uint32Array(Ge(i));let r=0;for(let n=0;n<s.length;n+=3)r+=ui(e[s[n]],e[s[n+1]],e[s[n+2]],ke.WGS84);return r}_selectFittingMode(e,i,s,r){const n=i.map(u=>Math.abs(hi(e,u))).reduce((u,m)=>Math.max(u,m),0);ai(i,this._tempSphere);const a=n/(2*this._tempSphere.radius),h=a<r.maxRelativeErrorCoplanar,d=a<r.maxRelativeErrorAlmostCoplanar;let p="horizontal";return h?p="oblique":d&&(p=Math.abs($(s,e))>Math.cos(nt(r.verticalAngleThreshold))?"horizontal":"vertical"),p}_updateCursorSegmentLength(e,i){const s=e.lastPoint;!e.isValidPolygon&&_(s)&&_(i)?(this.geodesicCursorSegmentLength=E(di(s,i),"meters"),this.cursorSegmentLength=E(this.unitNormalizer.normalizeDistance(li(s,i,this.unitNormalizer.spatialReference)),"meters")):(this.geodesicCursorSegmentLength=null,this.cursorSegmentLength=null)}_updateMode(e,i){if(i===le.Auto){this.actualMeasurementMode="euclidean";let s=0;this.geodesicPathLength!=null&&(s+=this.geodesicPathLength.value),!e.isValidPolygon&&_(this.geodesicCursorSegmentLength)&&(s+=this.geodesicCursorSegmentLength.value),s>fi&&(this.actualMeasurementMode="geodesic")}else this.actualMeasurementMode=i===le.Euclidean?"euclidean":"geodesic";this.geodesicPathLength==null&&(this.actualMeasurementMode="euclidean"),this._mode=i}}function _i(t,e){e.hasZ||(e.z=qe(at(t,e,"ground"),0))}const fi=1e5;let O=class extends ue{constructor(t){super(t)}initialize(){const{spatialReference:t}=this.view,e=ae(t),i=e===ot?ht:e,s=!t||je(t,i)?i:t,r=new Kt(s);this._measurementDataManager=new mi(this.view,r),this.own([this.analysisViewData.path.on("change",()=>this._update()),q(()=>this.analysisViewData.cursorPoint,()=>this._update(),Ce),q(()=>this.analysisViewData.mode,()=>this._update(),Ce)]),this._update()}_update(t=!1){const{analysisViewData:e,view:i}=this,s={maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80};this._measurementDataManager.update(e.path,e.cursorPoint,i,e.validMeasurement,s,e.mode,t)&&(e.measurementData=this._measurementDataManager.getData())}};o([l({constructOnly:!0})],O.prototype,"view",void 0),o([l({constructOnly:!0})],O.prototype,"analysis",void 0),o([l({constructOnly:!0})],O.prototype,"analysisViewData",void 0),O=o([te("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementController")],O);const Li=lt.getLogger("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurement3DPathHelper");let A=class extends dt.EventedAccessor{constructor(t={}){super(t),this._handles=new Fe,this._version=0,this._internalGeometryChange=!1,this._extent=be()}destroy(){this._handles=v(this._handles)}set areaMeasurement(t){this._set("areaMeasurement",t),_(t)&&_(this.view)&&this._initialize(t,this.view)}set view(t){this._set("view",t),_(t)&&_(this.areaMeasurement)&&this._initialize(this.areaMeasurement,t)}get initialized(){return _(this.areaMeasurement)&&_(this.view)}get version(){return this._version}get isValidPolygon(){return this.initialized&&this.editGeometry.components.length>0&&this.editGeometry.components[0].isClosed()}get extent(){if(this.initialized&&this.editGeometry.components.length>0&&this.editGeometry.components[0].vertices.length>0){const t=be(this._extent);return this.forEachVertex(e=>{ct(t,e.pos)}),t}return null}get spatialReference(){return this.initialized?this.editGeometry.coordinateHelper.spatialReference:null}_initialize(t,e){this._handles.removeAll(),this._handles.add(q(()=>t.geometry,()=>{this._updateEditGeometryFromModelGeometry(t,e)},oe)),this._makeDirty(!0)}_makeDirty(t=!1){this.notifyChange("isValidPolygon"),this.notifyChange("initialized"),this.notifyChange("extent"),t&&this.notifyChange("numVertices")}_updateEditGeometryFromModelGeometry(t,e){if(this._version++,this._internalGeometryChange)return;this._handles.remove("EditGeometry");let i=t.geometry;if(_(i)){const s=ut(i,e.spatialReference);F(s)&&ti(t,i.spatialReference,Li),i=s}_(i)?this._editGeometryOperations=De.fromGeometry(i,e.state.viewingMode):this._editGeometryOperations=new De(new ii("polygon",si(!0,!1,e.spatialReference))),this._makeDirty(!0),this.emit("change"),this._handles.add(this.editGeometry.on("change",s=>{this._makeDirty(s.addedVertices!=null||s.removedVertices!=null),this._internalGeometryChange=!0,t.geometry=this.numVertices>0?this.editGeometry.geometry:null,this._internalGeometryChange=!1}),"EditGeometry")}get editGeometry(){return this._editGeometryOperations.data}get vertices(){const t=[];return this.forEachVertex(e=>{t.push(e)}),t}get numVertices(){return this.initialized&&this.editGeometry.components.length>0?this.editGeometry.components[0].vertices.length:0}get lastPoint(){if(this.initialized&&this.editGeometry.components.length>0){const t=this.editGeometry.components[0].getLastVertex();if(_(t))return this.editGeometry.coordinateHelper.vectorToPoint(t.pos)}return null}getVertex(t){if(!this.initialized||this.editGeometry.components.length===0||this.editGeometry.components[0].vertices.length===0)return null;const e=this.editGeometry.components[0].vertices[0];let i=e;do{if(i.index===t)return i;i=i.rightEdge.rightVertex}while(i!==e&&i!=null);return null}getVertexPositionAsPoint(t){return this.editGeometry.coordinateHelper.vectorToPoint(t.pos)}getVertexPositionAsPointFromIndex(t){return this.editGeometry.coordinateHelper.vectorToPoint(this.getVertex(t).pos)}forEachVertex(t){this.initialized&&this.editGeometry.components.length>0&&this.editGeometry.components[0].iterateVertices(t)}forEachVertexPosition(t){const e=this.editGeometry.coordinateHelper;this.forEachVertex((i,s)=>{e.vectorToPoint(i.pos,Te),t(Te,s)})}clear(){_(this.areaMeasurement)&&(this.areaMeasurement.geometry=null)}add(t){if(!this.initialized)return null;if(this.editGeometry.components.length===0){const i=U(this.view);this.editGeometry.components.push(new ri(i.spatialReference,i.state.viewingMode))}const e=this._editGeometryOperations.appendVertex(this.editGeometry.coordinateHelper.pointToVector(t));return this.emit("change"),e}close(){if(!this.initialized||this.editGeometry.components.length===0)return null;const t=this._editGeometryOperations.closeComponent(this.editGeometry.components[0]);return this.emit("change"),t}ensureContains(t,e=""){let i=!1;if(this.editGeometry.components.forEach(s=>{s.iterateVertices(r=>{r===t&&(i=!0)})}),!i)throw new Error(`vertex doesnt exist ${e}`);return i}setVertexPosition(t,e){if(!this.initialized)return null;const i=this._editGeometryOperations.setVertexPosition(t,this.editGeometry.coordinateHelper.pointToVector(e));return this.emit("change"),i}equals(t){if(this.numVertices!==t.numVertices)return!1;let e=!0;return this.forEachVertexPosition((i,s)=>{const r=t.getVertexPositionAsPointFromIndex(s);i.equals(r)||(e=!1)}),!!e}};o([l({value:null})],A.prototype,"areaMeasurement",null),o([l({value:null})],A.prototype,"view",null),o([l()],A.prototype,"isValidPolygon",null),o([l()],A.prototype,"extent",null),o([l()],A.prototype,"spatialReference",null),o([l()],A.prototype,"numVertices",null),A=o([te("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurement3DPathHelper")],A);const Te=new pt;function yi(t){const e=new gt;return e.extensions.add("GL_OES_standard_derivatives"),mt(e,t),e.attributes.add(T.POSITION,"vec3"),e.attributes.add(T.UV0,"vec2"),e.varyings.add("vUV","vec2"),t.hasMultipassTerrain&&e.varyings.add("depth","float"),e.vertex.code.add(Pe`
    void main(void) {
      vUV = uv0;
      ${t.hasMultipassTerrain?"depth = (view * vec4(position, 1.0)).z;":""}
      gl_Position = proj * view * vec4(position, 1.0);
    }
  `),e.include(_t,t),e.fragment.uniforms.add(new ft("size",i=>i.size)),e.fragment.uniforms.add(new Me("color1",i=>i.color1)),e.fragment.uniforms.add(new Me("color2",i=>i.color2)),e.fragment.include(Lt),e.fragment.code.add(Pe`
    void main() {
      ${t.hasMultipassTerrain?"terrainDepthTest(gl_FragCoord, depth);":""}
      vec2 uvScaled = vUV / (2.0 * size);

      vec2 uv = fract(uvScaled - 0.25);
      vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
      float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
      float t = mix(abs(ab.x + ab.y), 0.5, fade);

      gl_FragColor = mix(color2, color1, t);
      ${t.transparencyPassType===I.Color?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}
    }
  `),e}const vi=Object.freeze(Object.defineProperty({__proto__:null,build:yi},Symbol.toStringTag,{value:"Module"}));class ie extends St{initializeProgram(e){const i=ie.shader.get().build(this.configuration);return new wt(e.rctx,i,Ct)}_setPipelineState(e){const i=this.configuration,s=e===I.NONE,r=e===I.FrontFace;return bt({blending:i.transparent?s?wi:Pt(e):null,depthTest:{func:Mt(e)},depthWrite:s?i.writeDepth&&At:$t(e),colorWrite:Vt,polygonOffset:s||r?i.polygonOffset&&Si:{factor:-1,units:-25}})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}}ie.shader=new vt(vi,()=>import("./CheckerBoard.glsl.05288eec.js"));const Si={factor:0,units:-25},wi=yt(Y.SRC_ALPHA,Y.ONE,Y.ONE_MINUS_SRC_ALPHA,Y.ONE_MINUS_SRC_ALPHA);class z extends Rt{constructor(){super(...arguments),this.transparencyPassType=I.NONE,this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.hasMultipassTerrain=!1,this.cullAboveGround=!1}}o([x({count:I.COUNT})],z.prototype,"transparencyPassType",void 0),o([x()],z.prototype,"transparent",void 0),o([x()],z.prototype,"writeDepth",void 0),o([x()],z.prototype,"polygonOffset",void 0),o([x()],z.prototype,"hasMultipassTerrain",void 0),o([x()],z.prototype,"cullAboveGround",void 0);class Ci extends zt{constructor(e){super(e,new Pi),this.techniqueConfig=new z}dispose(){}getConfiguration(e,i){return this.techniqueConfig.transparent=this.parameters.transparent,this.techniqueConfig.writeDepth=this.parameters.writeDepth,this.techniqueConfig.polygonOffset=this.parameters.polygonOffset,this.techniqueConfig.transparencyPassType=i?i.transparencyPassType:I.NONE,this.techniqueConfig.hasMultipassTerrain=!!i&&i.multipassTerrain.enabled,this.techniqueConfig.cullAboveGround=!!i&&i.multipassTerrain.cullAboveGround,this.techniqueConfig}intersect(e,i,s,r,n,a,h){return Gt(e,i,r,n,a,void 0,h)}requiresSlot(e){let i=X.OPAQUE_MATERIAL;return this.parameters.transparent&&(i=this.parameters.writeDepth?X.TRANSPARENT_MATERIAL:X.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL),e===i||e===X.DRAPED_MATERIAL}createGLMaterial(e){return e.output===Ae.Color||e.output===Ae.Alpha?new bi(e):null}createBufferWriter(){return new Dt(xt)}}class bi extends Ot{beginSlot(e){return this.ensureTechnique(ie,e)}}class Pi extends Tt{constructor(){super(...arguments),this.size=[1,1],this.color1=[.75,.75,.75,1],this.color2=[.5,.5,.5,1],this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1}}class Mi extends ni{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=G.OccludeAndTransparent,this._geometry=null,this._size=[1,1],this._color1=$e(1,.5,0,.5),this._color2=$e(1,1,1,.5),this.applyProps(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this._geometryChanged()}get size(){return this._size}set size(e){this._size=e,this._updateMaterial()}get color1(){return this._color1}set color1(e){Ve(e,this._color1)||(Re(this._color1,e),this._updateMaterial())}get color2(){return this._color2}set color2(e){Ve(e,this._color2)||(Re(this._color2,e),this._updateMaterial())}_updateMaterial(){_(this._checkerBoardMaterial)&&this._checkerBoardMaterial.setParameters({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new Ci({size:this._size,color1:this._color1,color2:this._color2,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:G.OccludeAndTransparent})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachExternalMaterial(e){_(this._checkerBoardMaterial)&&e(this._checkerBoardMaterial)}createGeometries(e){if(F(this._geometry)||F(this._checkerBoardMaterial))return;const i=Ai;kt(i,this.transform);const s=this._geometry,r=[],n=c();s.position.forEach(d=>{ee(n,d,i),r.push(n[0],n[1],n[2])});const a=[];s.uv.forEach(d=>{a.push(d[0],d[1])});const h=new It([[T.POSITION,{size:3,data:r,exclusive:!0}],[T.UV0,{size:2,data:a,exclusive:!0}]],[[T.POSITION,s.triangleIndices],[T.UV0,s.triangleIndices]]);e.addGeometry(h,this._checkerBoardMaterial)}_geometryChanged(){this.recreateGeometry()}}const Ai=c();let w=class extends ue{constructor(t){super(t),this._handles=new Fe,this._params=_e({},$i),this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._measurementArea=null,this._areaLabel=null,this._pathLengthLabel=null,this._cursorSegmentLengthLabel=null,this._perimeterLengthLabel=null,this._pathSegments=[],this._perimeterSegments=[],this._cursorSegment=null,this._origin=c(),this._originTransform=Et(),this._cursorPositionRenderSpace=c(),this.messages=null,this.viewData=Vi,this.areaLabel=null,this.perimeterLengthLabel=null,this.loadingMessages=!0}get visible(){return this.analysisViewData.visible}get testData(){return{labels:{area:this._areaLabel,pathLength:this._pathLengthLabel,cursorSegmentLength:this._cursorSegmentLengthLabel,perimeterLength:this._perimeterLengthLabel}}}initialize(){const{analysisViewData:t,_params:e,view:i}=this;this._path=new W({view:i,attached:!0,width:e.pathLineWidth,color:e.pathLineColor,polygonOffset:!0,renderOccluded:G.OccludeAndTransparent}),this._intersectedPath=new W({view:i,attached:!0,width:e.pathLineWidth,color:e.intersectingLineColor,polygonOffset:!0,renderOccluded:G.OccludeAndTransparent}),this._perimeter=new W({view:i,attached:!0,width:e.perimeterLineWidth,color:e.perimeterLineColor,polygonOffset:!0,renderOccluded:G.OccludeAndTransparent}),this._intersectedPerimeter=new W({view:i,attached:!0,width:e.perimeterLineWidth,color:e.intersectingLineColor,polygonOffset:!0,renderOccluded:G.OccludeAndTransparent}),this._projectionLines=new W({view:i,attached:!0,width:e.projectionLineWidth,color:e.projectionLineColor,stipplePattern:Wt(e.projectionLineStippleSize),polygonOffset:!0,renderOccluded:G.OccludeAndTransparent}),this._measurementArea=new Mi({view:i,attached:!0,color1:e.areaColor1,color2:e.areaColor2}),this._areaLabel=new Z({view:i,attached:!0,fontSize:k.Large}),this._pathLengthLabel=new Z({view:i,attached:!0,fontSize:k.Small}),this._cursorSegmentLengthLabel=new Z({view:i,attached:!0,fontSize:k.Small}),this._perimeterLengthLabel=new Z({view:i,attached:!0,fontSize:k.Small}),this._handles.add([q(()=>[t.mode,this.visible,t.unit,t.measurementData,t.cursorPoint],()=>this._update(),oe),q(()=>{var s;return(s=i.state)==null?void 0:s.camera},()=>this._updateLabels(),oe),Ut(async()=>this._updateMessageBundle())]),this._updateMessageBundle()}destroy(){this._measurementArea=v(this._measurementArea),this._path=v(this._path),this._intersectedPath=v(this._intersectedPath),this._perimeter=v(this._perimeter),this._intersectedPerimeter=v(this._intersectedPerimeter),this._areaLabel=v(this._areaLabel),this._pathLengthLabel=v(this._pathLengthLabel),this._cursorSegmentLengthLabel=v(this._cursorSegmentLengthLabel),this._perimeterLengthLabel=v(this._perimeterLengthLabel),this._projectionLines=v(this._projectionLines),this._handles=v(this._handles),this.set("view",null)}_update(){if(this.destroyed||!this.view.ready||!this.view.renderCoordsHelper)return;const{analysisViewData:{measurementData:t},analysisViewData:e}=this;F(t)||(this._updateViewData(t,e.path,e.cursorPoint),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}_updateViewData(t,e,i){const s=e.isValidPolygon,r=t.actualMeasurementMode==="geodesic",n=r?t.geodesicArea:t.area;let a=1;if(n){const d=this._toPreferredAreaUnit(n,this.analysisViewData.unit);a=jt(Math.sqrt(d.value)/Math.sqrt(300)),a*=Math.sqrt(qt(1,d.unit,"square-meters")),a/=t.unitNormalizer.normalizeDistance(1)}const h={validMeasurement:s,path:e,pathVersion:e.version,cursorPoint:i,measurementData:t,mode:t.actualMeasurementMode,positionsGeographic:t.positionsGeographic,positionsRenderCoords:t.positionsRenderCoords,positionsProjected:t.positionsProjectedWorldCoords,positionsFittedRenderCoords:t.positionsFittedRenderCoords,intersectingSegments:r?t.geodesicIntersectingSegments:t.intersectingSegments,triangleIndices:r?t.geodesicTriangleIndices:t.triangleIndices,fittingMode:t.fittingMode,areaCentroid:r?t.geodesicAreaCentroidRenderCoords:t.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:s?0:e.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:a};this._set("viewData",h)}_updateOrigin(){const t=this.viewData;he(t.positionsRenderCoords,this._origin),Ft(this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_createSegments(t){const e=this.viewData,i=e.path,s=this.view.renderCoordsHelper.spatialReference,r=e.mode,n=[],a=[],h=[],d=e.validMeasurement?i.numVertices:i.numVertices-1;for(let p=0;p<d;++p){const u=e[t][p],m=e[t][(p+1)%i.numVertices];let g=null;switch(r){case"euclidean":g=new de(u,m);break;case"geodesic":g=new Oe(u,m,s)}e.intersectingSegments.has(p)?h.push(g):a.push(g),n.push(g)}return{all:n,nonIntersecting:a,intersecting:h}}_updatePathSegments(){const{view:{renderCoordsHelper:t},viewData:e,visible:i}=this,s=this._createSegments("positionsRenderCoords"),{cursorPoint:r,mode:n,path:a}=e,h=!a.isValidPolygon,d=t.spatialReference;if(this._cursorSegment=null,a.numVertices>0&&h&&_(r)&&t.toRenderCoords(r,this._cursorPositionRenderSpace)){const p=e.positionsRenderCoords[a.numVertices-1],u=this._cursorPositionRenderSpace;let m=null;switch(n){case"euclidean":m=new de(p,u);break;case"geodesic":m=new Oe(p,u,d)}s.nonIntersecting.push(m),this._cursorSegment=m}this._path.setGeometryFromSegments(s.nonIntersecting,this._origin),this._path.visible=i,this._intersectedPath.setGeometryFromSegments(s.intersecting,this._origin),this._intersectedPath.visible=i,this._pathSegments=s.all}_updatePerimeterSegments(){const t=this.visible&&this.viewData.mode==="euclidean",e=this._createSegments("positionsFittedRenderCoords");this._perimeter.setGeometryFromSegments(e.nonIntersecting,this._origin),this._perimeter.visible=t,this._intersectedPerimeter.setGeometryFromSegments(e.intersecting,this._origin),this._intersectedPerimeter.visible=t,this._perimeterSegments=e.all}_updateArea(){const t=this.viewData;switch(t.mode){case"euclidean":this._updateAreaEuclidean(t);break;case"geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(t){const e=this.visible;t.validMeasurement&&t.intersectingSegments.size===0&&t.triangleIndices?(this._measurementArea.geometry={uv:t.positionsProjected,position:t.positionsFittedRenderCoords,triangleIndices:t.triangleIndices},this._measurementArea.size=[t.checkerSize,t.checkerSize],this._measurementArea.visible=e):this._measurementArea.visible=!1}_updateAreaGeodesic(){this._measurementArea.visible=!1}_updateProjectionLines(){const t=this.viewData,e=this.visible,i=t.path,s=t.mode;if(i.numVertices>0&&t.validMeasurement&&s==="euclidean"){const r=[];for(let n=0;n<i.numVertices;++n){const a=c();ee(a,t.positionsRenderCoords[n],this._origin);const h=c();ee(h,t.positionsFittedRenderCoords[n],this._origin),r.push([a,h])}this._projectionLines.geometry=r,this._projectionLines.visible=e}else this._projectionLines.geometry=null,this._projectionLines.visible=!1}_updateLabels(){if(this.destroyed)return;const{viewData:t}=this,{measurementData:e,mode:i,path:s}=t;if(!s)return;const r=!s.isValidPolygon,n=this.visible,a=this._formatAreaLabel(this.messages,i==="geodesic"?e.geodesicArea:e.area,this.analysisViewData.unit);_(a)?(this._areaLabel.geometry={type:"point",point:t.areaCentroid},this._areaLabel.text=a,this._areaLabel.visible=t.validMeasurement&&t.intersectingSegments.size===0&&n):this._areaLabel.visible=!1,this._set("areaLabel",U(a));const h=this._formatLengthLabel(this.messages,i==="geodesic"?e.geodesicPathLength:e.pathLength,this.analysisViewData.unit);if(_(h)&&t.pathLengthLabelSegmentIndex>=0&&t.pathLengthLabelSegmentIndex<this._pathSegments.length){const g=this._pathSegments[t.pathLengthLabelSegmentIndex],y=_(this._cursorSegment)?this._cursorSegment:Ri;this._pathLengthLabel.distance=this._params.labelDistance,this._pathLengthLabel.geometry={type:"corner",left:g,right:y},this._pathLengthLabel.text=h,this._pathLengthLabel.visible=r&&s.numVertices>0&&n}else this._pathLengthLabel.visible=!1;const d=i==="geodesic"?t.measurementData.geodesicCursorSegmentLength:t.measurementData.cursorSegmentLength;if(_(d)){const g=this._formatLengthLabel(this.messages,d,this.analysisViewData.unit);this._cursorSegmentLengthLabel.distance=this._params.labelDistance,this._cursorSegmentLengthLabel.geometry=_(this._cursorSegment)?{type:"segment",segment:this._cursorSegment,sampleLocation:"end"}:null,this._cursorSegmentLengthLabel.anchor="bottom",this._cursorSegmentLengthLabel.text=U(g),this._cursorSegmentLengthLabel.visible=r&&d.value!==0&&n}else this._cursorSegmentLengthLabel.visible=!1;this._cursorSegmentLengthLabel.overlaps(this._pathLengthLabel)&&(this._cursorSegmentLengthLabel.visible=!1),this._pathLengthLabel.overlaps(this._areaLabel)&&(this._pathLengthLabel.visible=!1);const p=t.mode==="geodesic",u=p?e.geodesicPathLength:e.perimeterLength,m=this._formatLengthLabel(this.messages,u,this.analysisViewData.unit);if(this._set("perimeterLengthLabel",U(m)),t.validMeasurement&&t.intersectingSegments.size===0){this._perimeterLengthLabel.distance=this._params.labelDistance,this._perimeterLengthLabel.anchor="top",this._perimeterLengthLabel.text=U(m),this._perimeterLengthLabel.visible=!0;let g=!0;for(let y=0;y<t.path.numVertices;++y){const b=(t.perimeterLengthLabelSegmentIndex+y)%t.path.numVertices,P=p?this._pathSegments[b]:this._perimeterSegments[b];if(g=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:P,sampleLocation:"center"},!this._perimeterLengthLabel.overlaps(this._areaLabel))break;g=!1}this._perimeterLengthLabel.visible=g&&n}else this._perimeterLengthLabel.visible=!1}_toPreferredAreaUnit(t,e){return Qt(t,this._preferredAreaUnit(t,e))}_preferredAreaUnit(t,e){switch(e){case"metric":return Bt(t.value,t.unit);case"imperial":return Nt(t.value,t.unit);default:return e}}_preferredLengthUnit(t,e){const i=this._deriveLengthUnitFromAreaUnit(e);switch(i){case"metric":return Yt(t.value,t.unit);case"imperial":return Ht(t.value,t.unit);default:return i}}_deriveLengthUnitFromAreaUnit(t){switch(t){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers"}throw new Error("unhandled area unit")}_formatAreaLabel(t,e,i){return t&&e&&xe(t,e,this._preferredAreaUnit(e,i))}_formatLengthLabel(t,e,i){return t&&e&&xe(t,e,this._preferredLengthUnit(e,i))}_updateMessageBundle(){this.loadingMessages=!0,Xt("esri/core/t9n/Units").then(t=>{this.messages=t,this.view&&this._update()}).finally(()=>{this.loadingMessages=!1})}};var k;o([l()],w.prototype,"view",void 0),o([l()],w.prototype,"messages",void 0),o([l()],w.prototype,"analysis",void 0),o([l()],w.prototype,"viewData",void 0),o([l()],w.prototype,"analysisViewData",void 0),o([l({readOnly:!0})],w.prototype,"areaLabel",void 0),o([l({readOnly:!0})],w.prototype,"perimeterLengthLabel",void 0),o([l()],w.prototype,"loadingMessages",void 0),o([l()],w.prototype,"visible",null),w=o([te("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],w),function(t){t[t.Small=12]="Small",t[t.Large=16]="Large"}(k||(k={}));const $i={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:1,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5,handleRadiusHovered:10,handleRadiusMouse:10,handleRadiusTouch:25,pathLineColor:[1,.5,0,1],pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:[1,.5,0,1],perimeterLineWidth:2,projectionLineColor:[1,.5,0,1],projectionLineWidth:2,projectionLineStippleSize:5,areaColor1:[1,.5,0,.5],areaColor2:[1,1,1,.5],fillColor:[1,.5,0,.5],lineSubdivisions:64,labelDistance:25},Vi={validMeasurement:!1,path:null,pathVersion:-1,cursorPoint:null,measurementData:null,mode:null,positionsGeographic:null,positionsRenderCoords:null,positionsProjected:null,positionsFittedRenderCoords:null,intersectingSegments:null,triangleIndices:null,fittingMode:null,areaCentroid:null,pathLengthLabelSegmentIndex:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null},Ri=new de(c(),c());let f=class extends Jt(ue){constructor(t){super(t),this.type="area-measurement-view-3d",this.analysis=null,this.measurementData=null,this.lastDraggedVertex=null,this.cursorPoint=null,this.mode=le.Auto}initialize(){const{analysis:t,view:e}=this;this.path=new A({view:e,areaMeasurement:t}),this.analysisVisualization=new w({view:e,analysis:t,analysisViewData:this}),this.analysisController=new O({view:e,analysis:t,analysisViewData:this})}destroy(){this.analysisController=v(this.analysisController),this.analysisVisualization=v(this.analysisVisualization),this.path.destroy()}get updating(){var t;return!!((t=this.analysisVisualization)==null?void 0:t.loadingMessages)}get result(){const{measurementData:t}=this;return F(t)?{area:null,mode:null,perimeter:null}:t.actualMeasurementMode==="euclidean"?{area:t.area,perimeter:t.perimeterLength,mode:"euclidean"}:{area:t.geodesicArea,perimeter:t.pathLength,mode:"geodesic"}}get viewData(){return this.analysisVisualization.viewData}get validMeasurement(){return this.path.isValidPolygon}get unit(){return qe(this.analysis.unit,this._defaultUnit)}get testData(){return{visualization:this.analysisVisualization,controller:this.analysisController}}};o([l({readOnly:!0})],f.prototype,"type",void 0),o([l({constructOnly:!0,nonNullable:!0})],f.prototype,"analysis",void 0),o([l()],f.prototype,"updating",null),o([l()],f.prototype,"analysisVisualization",void 0),o([l()],f.prototype,"analysisController",void 0),o([l()],f.prototype,"result",null),o([l()],f.prototype,"measurementData",void 0),o([l()],f.prototype,"viewData",null),o([l()],f.prototype,"validMeasurement",null),o([l()],f.prototype,"path",void 0),o([l()],f.prototype,"lastDraggedVertex",void 0),o([l()],f.prototype,"cursorPoint",void 0),o([l()],f.prototype,"mode",void 0),o([l()],f.prototype,"unit",null),o([l(Zt)],f.prototype,"_defaultUnit",void 0),f=o([te("esri.views.3d.analysis.AreaMeasurementAnalysisView3D")],f);const zi=f;var Ni=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:zi});export{Ni as A,yi as n};
