var fe=Object.defineProperty,ge=Object.defineProperties;var me=Object.getOwnPropertyDescriptors;var N=Object.getOwnPropertySymbols;var be=Object.prototype.hasOwnProperty,Pe=Object.prototype.propertyIsEnumerable;var j=(s,e,t)=>e in s?fe(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,F=(s,e)=>{for(var t in e||(e={}))be.call(e,t)&&j(s,t,e[t]);if(N)for(var t of N(e))Pe.call(e,t)&&j(s,t,e[t]);return s},H=(s,e)=>ge(s,me(e));import{mU as ve,mV as Ve,du as b,mg as B,dt as Ee,dn as E,mW as xe,dq as h,F as a,dk as ie,iH as W,mX as we,hK as ne,d4 as p,hP as se,eJ as De,dE as re,dF as ae,dG as le,dI as oe,dz as ce,dA as C,dO as he,hI as Le,aC as u,b3 as M,hr as de,I as d,i_ as ye,eY as Se,i$ as Ce,j0 as Re,g7 as Ae,z as D,dB as L,hD as Me,kk as O,hn as $e,mY as $,iJ as x,mZ as G,dH as Te,mG as qe,lY as q,fB as ue,iR as Oe,m_ as Ue,m$ as Ie,bI as k,az as m,n0 as R,n1 as ze,hB as Ne,hE as X,fI as Y,eG as V,g4 as je,mL as Fe,ka as T,kb as He,b5 as J,mH as Be,n2 as We,mI as Ge,mJ as ke,mK as Xe,n3 as _e,kR as Ye,n4 as Je,lo as K,n5 as Ke,aV as Ze,V as Qe,lE as et,dc as tt,Y as it,w as nt}from"./vendor.508dc62e.js";import{t as st}from"./Object3DVisualElement.0959ced1.js";function pe(s,e){s.extensions.add("GL_OES_standard_derivatives");const t=s.fragment;t.include(ve),s.include(Ve),t.uniforms.add([new b("globalAlpha",i=>i.globalAlpha),new B("glowColor",i=>i.glowColor),new b("glowWidth",(i,n)=>i.glowWidth*n.camera.pixelRatio),new b("glowFalloff",i=>i.glowFalloff),new B("innerColor",i=>i.innerColor),new b("innerWidth",(i,n)=>i.innerWidth*n.camera.pixelRatio),new Ee("depthMap",(i,n)=>n.linearDepthTexture),new E("nearFar",(i,n)=>n.camera.nearFar),new xe("frameColor")]),t.code.add(h`vec4 blendPremultiplied(vec4 source, vec4 dest) {
float oneMinusSourceAlpha = 1.0 - source.a;
return vec4(
source.rgb + dest.rgb * oneMinusSourceAlpha,
source.a + dest.a * oneMinusSourceAlpha
);
}`),t.code.add(h`vec4 premultipliedColor(vec3 rgb, float alpha) {
return vec4(rgb * alpha, alpha);
}`),t.code.add(h`vec4 laserlineProfile(float dist) {
if (dist > glowWidth) {
return vec4(0.0);
}
float innerAlpha = (1.0 - smoothstep(0.0, innerWidth, dist));
float glowAlpha = pow(max(0.0, 1.0 - dist / glowWidth), glowFalloff);
return blendPremultiplied(
premultipliedColor(innerColor, innerAlpha),
premultipliedColor(glowColor, glowAlpha)
);
}`),t.code.add(h`bool laserlineReconstructFromDepth(out vec3 pos, out vec3 normal, out float depthDiscontinuityAlpha) {
float depth = linearDepthFromTexture(depthMap, uv, nearFar);
if (-depth == nearFar[0]) {
return false;
}
pos = reconstructPosition(gl_FragCoord.xy, depth);
normal = normalize(cross(dFdx(pos), dFdy(pos)));
float ddepth = fwidth(depth);
depthDiscontinuityAlpha = 1.0 - smoothstep(0.0, 0.01, -ddepth / depth);
return true;
}`),e.contrastControlEnabled?(t.uniforms.add(new b("globalAlphaContrastBoost",i=>a(i.globalAlphaContrastBoost)?i.globalAlphaContrastBoost:1)),t.code.add(h`float rgbToLuminance(vec3 color) {
return dot(vec3(0.2126, 0.7152, 0.0722), color);
}
vec4 laserlineOutput(vec4 color) {
float backgroundLuminance = rgbToLuminance(texture2D(frameColor, uv).rgb);
float alpha = clamp(globalAlpha * max(backgroundLuminance * globalAlphaContrastBoost, 1.0), 0.0, 1.0);
return color * alpha;
}`)):t.code.add(h`vec4 laserlineOutput(vec4 color) {
return color * globalAlpha;
}`)}function rt(s){const e=new ie;e.include(pe,s);const{vertex:t,fragment:i}=e;return t.uniforms.add([new W("modelView",(n,r)=>we(lt,r.camera.viewMatrix,n.origin)),new W("proj",(n,r)=>r.camera.projectionMatrix),new b("glowWidth",(n,r)=>n.glowWidth*r.camera.pixelRatio),new E("pixelToNDC",(n,r)=>ne(at,2/r.camera.fullViewport[2],2/r.camera.fullViewport[3]))]),e.attributes.add(p.START,"vec3"),e.attributes.add(p.END,"vec3"),e.attributes.add(p.UP,"vec3"),e.attributes.add(p.EXTRUDE,"vec2"),e.varyings.add("uv","vec2"),e.varyings.add("vViewStart","vec3"),e.varyings.add("vViewEnd","vec3"),e.varyings.add("vViewPlane","vec4"),t.code.add(h`void main() {
vec3 pos = mix(start, end, extrude.x);
vec4 viewPos = modelView * vec4(pos, 1);
vec4 projPos = proj * viewPos;
vec2 ndcPos = projPos.xy / projPos.w;
vec3 viewUp = (modelView * vec4(extrude.y * up, 0)).xyz;
vec4 projPosUp = proj * vec4(viewPos.xyz + viewUp, 1);
vec2 projExtrudeDir = normalize(projPosUp.xy / projPosUp.w - ndcPos);
vec2 lxy = abs(sign(projExtrudeDir) - ndcPos);
ndcPos += length(lxy) * projExtrudeDir;
vec3 worldPlaneNormal = normalize(cross(up, normalize(end - start)));
vec3 viewPlaneNormal = (modelView * vec4(worldPlaneNormal, 0)).xyz;
vViewStart = (modelView * vec4(start, 1)).xyz;
vViewEnd = (modelView * vec4(end, 1)).xyz;
vViewPlane = vec4(viewPlaneNormal, -dot(viewPlaneNormal, vViewStart));
float xPaddingPixels = sign(dot(viewPlaneNormal, viewPos.xyz)) * (extrude.x * 2.0 - 1.0) * glowWidth;
ndcPos.x += xPaddingPixels * pixelToNDC.x;
uv = ndcPos * 0.5 + 0.5;
gl_Position = vec4(ndcPos, 0, 1);
}`),i.uniforms.add(new b("perScreenPixelRatio",(n,r)=>r.camera.perScreenPixelRatio)),i.code.add(h`float planeDistancePixels(vec4 plane, vec3 pos, vec3 start, vec3 end) {
vec3 origin = mix(start, end, 0.5);
vec3 basis = end - origin;
vec3 posAtOrigin = pos - origin;
float x = dot(normalize(basis), posAtOrigin);
float y = dot(plane.xyz, posAtOrigin);
float dx = max(abs(x) - length(basis), 0.0);
float dy = y;
float dist = length(vec2(dx, dy));
float width = fwidth(y);
float maxPixelDistance = length(pos) * perScreenPixelRatio * 2.0;
float pixelDist = dist / min(width, maxPixelDistance);
return abs(pixelDist);
}
void main() {
vec3 pos;
vec3 normal;
float depthDiscontinuityAlpha;
if (!laserlineReconstructFromDepth(pos, normal, depthDiscontinuityAlpha)) {
discard;
}
float distance = planeDistancePixels(vViewPlane, pos, vViewStart, vViewEnd);
vec4 color = laserlineProfile(distance);
float alpha = 1.0 - smoothstep(0.995, 0.999, abs(dot(normal, vViewPlane.xyz)));
gl_FragColor = laserlineOutput(color * alpha * depthDiscontinuityAlpha);
}`),e}const at=se(),lt=De(),ot=Object.freeze(Object.defineProperty({__proto__:null,build:rt},Symbol.toStringTag,{value:"Module"}));class v extends ae{initializeProgram(e){const t=v.shader.get().build(this.configuration);return new le(e.rctx,t,v.attributeLocations)}initializePipeline(){return oe({blending:ce(C.ONE,C.ONE_MINUS_SRC_ALPHA),colorWrite:he})}}v.shader=new re(ot,()=>import("./LaserlinePath.glsl.e95686b8.js")),v.attributeLocations=new Map([[p.START,0],[p.END,1],[p.UP,2],[p.EXTRUDE,3]]);class Z{constructor(e){this._renderCoordsHelper=e,this._buffers=null,this._origin=u(),this._dirty=!1,this._count=0,this._vao=null}set vertices(e){const t=new Float64Array(3*e.length);let i=0;for(const n of e)t[i++]=n[0],t[i++]=n[1],t[i++]=n[2];this.buffers=[t]}set buffers(e){if(this._buffers=e,this._buffers.length>0){const t=this._buffers[0],i=3*Math.floor(t.length/3/2);M(this._origin,t[i+0],t[i+1],t[i+2])}else M(this._origin,0,0,0);this._dirty=!0}get origin(){return this._origin}draw(e){const t=this._ensureVAO(e);a(t)&&(e.bindVAO(t),e.drawArrays(de.TRIANGLES,0,this._count))}dispose(){a(this._vao)&&this._vao.dispose()}_ensureVAO(e){return d(this._buffers)?null:(d(this._vao)&&(this._vao=this._createVAO(e,this._buffers)),this._ensureVertexData(this._vao,this._buffers),this._vao)}_createVAO(e,t){const i=this._createDataBuffer(t);return this._dirty=!1,new ye(e,v.attributeLocations,{data:Se(ee)},{data:Ce.createVertex(e,Re.STATIC_DRAW,i)})}_ensureVertexData(e,t){if(!this._dirty)return;const i=this._createDataBuffer(t);e.vertexBuffers.data.setData(i),this._dirty=!1}_numberOfRenderVertices(e){return 3*(2*(e.length/3-1))}_createDataBuffer(e){const t=e.reduce((l,o)=>l+this._numberOfRenderVertices(o),0);this._count=t;const i=ee.createBuffer(t),n=this._origin;let r=0,f=0;for(const l of e){for(let o=0;o<l.length;o+=3){const g=M(Q,l[o+0],l[o+1],l[o+2]);o===0?f=this._renderCoordsHelper.getAltitude(g):this._renderCoordsHelper.setAltitude(g,f);const _=this._renderCoordsHelper.worldUpAtPosition(g,ct),c=r+2*o,z=Ae(Q,g,n);if(o<l.length-3){i.up.setVec(c,_),i.up.setVec(c+3,_),i.up.setVec(c+5,_);for(let P=0;P<6;P++)i.start.setVec(c+P,z);i.extrude.setValues(c+0,0,-1),i.extrude.setValues(c+1,1,-1),i.extrude.setValues(c+2,1,1),i.extrude.setValues(c+3,0,-1),i.extrude.setValues(c+4,1,1),i.extrude.setValues(c+5,0,1)}if(o>0){i.up.setVec(c-2,_),i.up.setVec(c-4,_),i.up.setVec(c-5,_);for(let P=-6;P<0;P++)i.end.setVec(c+P,z)}}r+=this._numberOfRenderVertices(l)}return i.buffer}}const ct=u(),Q=u(),ee=Le().vec3f(p.START).vec3f(p.END).vec3f(p.UP).vec2f(p.EXTRUDE);class U extends Me{constructor(){super(...arguments),this.contrastControlEnabled=!1}}D([L()],U.prototype,"contrastControlEnabled",void 0);const I=O(6);function ht(s){const e=new ie;e.extensions.add("GL_OES_standard_derivatives"),e.include($e),e.include(pe,s);const t=e.fragment;return s.heightManifoldEnabled&&t.uniforms.add(new $("heightPlane")),s.pointDistanceEnabled&&t.uniforms.add(new $("pointDistanceSphere")),s.lineVerticalPlaneEnabled&&(t.uniforms.add(new $("lineVerticalPlane")),t.uniforms.add(new x("lineVerticalStart")),t.uniforms.add(new x("lineVerticalEnd"))),(s.heightManifoldEnabled||s.pointDistanceEnabled||s.lineVerticalPlaneEnabled)&&t.uniforms.add(new G("maxPixelDistance")),(s.lineVerticalPlaneEnabled||s.heightManifoldEnabled)&&t.code.add(h`float planeDistancePixels(vec4 plane, vec3 pos) {
float dist = dot(plane.xyz, pos) + plane.w;
float width = fwidth(dist);
dist /= min(width, maxPixelDistance);
return abs(dist);
}`),s.pointDistanceEnabled&&t.code.add(h`float sphereDistancePixels(vec4 sphere, vec3 pos) {
float dist = distance(sphere.xyz, pos) - sphere.w;
float width = fwidth(dist);
dist /= min(width, maxPixelDistance);
return abs(dist);
}`),s.intersectsLineEnabled&&(t.uniforms.add(new x("intersectsLineStart")),t.uniforms.add(new x("intersectsLineEnd")),t.uniforms.add(new x("intersectsLineDirection")),t.uniforms.add(new G("intersectsLineRadius")),t.uniforms.add(new b("perScreenPixelRatio",(i,n)=>n.camera.perScreenPixelRatio)),t.code.add(h`float lineDistancePixels(vec3 start, vec3 dir, float radius, vec3 pos) {
float dist = length(cross(dir, pos - start)) / (length(pos) * perScreenPixelRatio);
return abs(dist) - radius;
}`)),(s.lineVerticalPlaneEnabled||s.intersectsLineEnabled)&&t.code.add(h`bool pointIsWithinLine(vec3 pos, vec3 start, vec3 end) {
vec3 dir = end - start;
float t2 = dot(dir, pos - start);
float l2 = dot(dir, dir);
return t2 >= 0.0 && t2 <= l2;
}`),t.code.add(h`void main() {
vec3 pos;
vec3 normal;
float depthDiscontinuityAlpha;
if (!laserlineReconstructFromDepth(pos, normal, depthDiscontinuityAlpha)) {
discard;
}
vec4 color = vec4(0, 0, 0, 0);`),s.heightManifoldEnabled&&(t.uniforms.add(new E("angleCutoff",i=>S(i))),t.code.add(h`{
float heightManifoldAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, heightPlane.xyz)));
vec4 heightManifoldColor = laserlineProfile(planeDistancePixels(heightPlane, pos));
color = max(color, heightManifoldColor * heightManifoldAlpha);
}`)),s.pointDistanceEnabled&&(t.uniforms.add(new E("angleCutoff",i=>S(i))),t.code.add(h`{
float pointDistanceSphereDistance = sphereDistancePixels(pointDistanceSphere, pos);
vec4 pointDistanceSphereColor = laserlineProfile(pointDistanceSphereDistance);
float pointDistanceSphereAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, normalize(pos - pointDistanceSphere.xyz))));
color = max(color, pointDistanceSphereColor * pointDistanceSphereAlpha);
}`)),s.lineVerticalPlaneEnabled&&(t.uniforms.add(new E("angleCutoff",i=>S(i))),t.code.add(h`{
if (pointIsWithinLine(pos, lineVerticalStart, lineVerticalEnd)) {
float lineVerticalDistance = planeDistancePixels(lineVerticalPlane, pos);
vec4 lineVerticalColor = laserlineProfile(lineVerticalDistance);
float lineVerticalAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, lineVerticalPlane.xyz)));
color = max(color, lineVerticalColor * lineVerticalAlpha);
}
}`)),s.intersectsLineEnabled&&(t.uniforms.add(new E("angleCutoff",i=>S(i))),t.code.add(h`{
if (pointIsWithinLine(pos, intersectsLineStart, intersectsLineEnd)) {
float intersectsLineDistance = lineDistancePixels(intersectsLineStart, intersectsLineDirection, intersectsLineRadius, pos);
vec4 intersectsLineColor = laserlineProfile(intersectsLineDistance);
float intersectsLineAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, 1.0 - abs(dot(normal, intersectsLineDirection)));
color = max(color, intersectsLineColor * intersectsLineAlpha);
}
}`)),t.code.add(h`gl_FragColor = laserlineOutput(color * depthDiscontinuityAlpha);
}`),e}function S(s){const e=a(s.angleCutoff)?s.angleCutoff:I;return ne(dt,Math.cos(e),Math.cos(Math.max(0,e-O(2))))}const dt=se(),ut=Object.freeze(Object.defineProperty({__proto__:null,defaultAngleCutoff:I,build:ht},Symbol.toStringTag,{value:"Module"}));class A extends ae{initializeProgram(e){const t=A.shader.get().build(this.configuration);return new le(e.rctx,t,Te)}initializePipeline(){return oe({blending:ce(C.ONE,C.ONE_MINUS_SRC_ALPHA),colorWrite:he})}}A.shader=new re(ut,()=>import("./Laserlines.glsl.dc2ac709.js"));class y extends U{constructor(){super(...arguments),this.heightManifoldEnabled=!1,this.pointDistanceEnabled=!1,this.lineVerticalPlaneEnabled=!1,this.intersectsLineEnabled=!1}}D([L()],y.prototype,"heightManifoldEnabled",void 0),D([L()],y.prototype,"pointDistanceEnabled",void 0),D([L()],y.prototype,"lineVerticalPlaneEnabled",void 0),D([L()],y.prototype,"intersectsLineEnabled",void 0);const _t=u(),pt=ue(),ft={glowColor:[1,.5,0],glowWidth:8,glowFalloff:8,innerColor:[1,1,1],innerWidth:1,globalAlpha:.75,angleCutoff:O(6),globalAlphaContrastBoost:2,__tagStrict:"NoParameters"};function te(s,e,t,i){const n=_t,r=pt;V(n,e,i),m(r,t),r[3]=0,_e(r,r,i),Ye(n,r,s)}class gt{constructor(e,t={},i={contrastControlEnabled:!1}){this._renderCoordsHelper=e,this._config=i,this._technique=null,this._heightManifoldEnabled=!1,this._heightManifoldTarget=u(),this._pointDistanceEnabled=!1,this._pointDistanceOrigin=u(),this._pointDistanceTarget=u(),this._lineVerticalPlaneEnabled=!1,this._lineVerticalPlaneSegment=q(),this._intersectsLineEnabled=!1,this._intersectsLineSegment=q(),this._intersectsLineRadius=3,this._intersectsLineInfinite=!1,this._pathVerticalPlaneEnabled=!1,this._pathVerticalPlaneData=null,this._pathTechnique=null,this.canRender=!0,this._tempNormal=u(),this._tempDir=u(),this._tempUp=u(),this._tempVec3A=u(),this._tempVec3B=u(),this._tempVec4=ue(),this._tempPlane=Oe(),this._tempSphere=Ue(),this._parameters=Ie(t,ft)}get renderSlots(){return[this._config.contrastControlEnabled?k.LASERLINES_CONTRAST_CONTROL:k.LASERLINES]}get needsLinearDepth(){return!0}get heightManifoldEnabled(){return this._heightManifoldEnabled}set heightManifoldEnabled(e){this._heightManifoldEnabled!==e&&(this._heightManifoldEnabled=e,this._requestRender())}get heightManifoldTarget(){return this._heightManifoldTarget}set heightManifoldTarget(e){m(this._heightManifoldTarget,e),this._requestRender()}get pointDistanceEnabled(){return this._pointDistanceEnabled}set pointDistanceEnabled(e){e!==this._pointDistanceEnabled&&(this._pointDistanceEnabled=e,this._requestRender())}get pointDistanceTarget(){return this._pointDistanceTarget}set pointDistanceTarget(e){m(this._pointDistanceTarget,e),this._requestRender()}get pointDistanceOrigin(){return this._pointDistanceOrigin}set pointDistanceOrigin(e){m(this._pointDistanceOrigin,e),this._requestRender()}get lineVerticalPlaneEnabled(){return this._lineVerticalPlaneEnabled}set lineVerticalPlaneEnabled(e){e!==this._lineVerticalPlaneEnabled&&(this._lineVerticalPlaneEnabled=e,this._requestRender())}get lineVerticalPlaneSegment(){return this._lineVerticalPlaneSegment}set lineVerticalPlaneSegment(e){R(e,this._lineVerticalPlaneSegment),this._requestRender()}get intersectsLineEnabled(){return this._intersectsLineEnabled}set intersectsLineEnabled(e){e!==this._intersectsLineEnabled&&(this._intersectsLineEnabled=e,this._requestRender())}get intersectsLineSegment(){return this._intersectsLineSegment}set intersectsLineSegment(e){R(e,this._intersectsLineSegment),this._requestRender()}get intersectsLineRadius(){return this._intersectsLineRadius}set intersectsLineRadius(e){e!==this._intersectsLineRadius&&(this._intersectsLineRadius=e,this._requestRender())}get intersectsLineInfinite(){return this._intersectsLineInfinite}set intersectsLineInfinite(e){e!==this._intersectsLineInfinite&&(this._intersectsLineInfinite=e,this._requestRender())}get pathVerticalPlaneEnabled(){return this._pathVerticalPlaneEnabled}set pathVerticalPlaneEnabled(e){e!==this._pathVerticalPlaneEnabled&&(this._pathVerticalPlaneEnabled=e,a(this._pathVerticalPlaneData)&&this._requestRender())}set pathVerticalPlaneVertices(e){d(this._pathVerticalPlaneData)&&(this._pathVerticalPlaneData=new Z(this._renderCoordsHelper)),this._pathVerticalPlaneData.vertices=e,this.pathVerticalPlaneEnabled&&this._requestRender()}set pathVerticalPlaneBuffers(e){d(this._pathVerticalPlaneData)&&(this._pathVerticalPlaneData=new Z(this._renderCoordsHelper)),this._pathVerticalPlaneData.buffers=e,this.pathVerticalPlaneEnabled&&this._requestRender()}setParameters(e){ze(this._parameters,e)&&this._requestRender()}initializeRenderContext(e){this._context=e;const t=e.renderContext.rctx;this._quadVAO=Ne(t),this._techniqueRepository=e.shaderTechniqueRepository,this._techniqueConfig=new y;const i=new U;i.contrastControlEnabled=this._config.contrastControlEnabled,this._pathTechnique=this._techniqueRepository.acquire(v,i)}uninitializeRenderContext(){this._quadVAO=X(this._quadVAO),this._technique=Y(this._technique),this._pathVerticalPlaneData=X(this._pathVerticalPlaneData),this._pathTechnique=Y(this._pathTechnique)}prepareTechnique(){return this.heightManifoldEnabled||this.pointDistanceEnabled||this.lineVerticalPlaneSegment||this.intersectsLineEnabled?(this._techniqueConfig.heightManifoldEnabled=this.heightManifoldEnabled,this._techniqueConfig.lineVerticalPlaneEnabled=this.lineVerticalPlaneEnabled,this._techniqueConfig.pointDistanceEnabled=this.pointDistanceEnabled,this._techniqueConfig.intersectsLineEnabled=this.intersectsLineEnabled,this._techniqueConfig.contrastControlEnabled=this._config.contrastControlEnabled,this._technique=this._techniqueRepository.releaseAndAcquire(A,this._techniqueConfig,this._technique),this._technique):this._pathTechnique}render(e,t){(this.heightManifoldEnabled||this.pointDistanceEnabled||this.lineVerticalPlaneSegment||this.intersectsLineEnabled)&&this._renderUnified(e,t),this.pathVerticalPlaneEnabled&&this._renderPath(e)}_renderUnified(e,t){const i=e.rctx,n=i.bindTechnique(t,this._parameters,e.bindParameters);this._bindGlobalUniforms(e,n),this._bindHeightManifoldUniforms(e,n),this._bindPointDistanceUniforms(e,n),this._bindLineVerticalPlaneUniforms(e,n),this._bindIntersectsLineUniforms(e,n),i.bindVAO(this._quadVAO),i.drawArrays(de.TRIANGLE_STRIP,0,4)}_renderPath(e){if(d(this._pathVerticalPlaneData)||d(this._pathTechnique))return;const t=e.rctx,i=this._pathTechnique,n=t.bindTechnique(i,H(F({},this._parameters),{origin:this._pathVerticalPlaneData.origin}),e.bindParameters);this._bindGlobalUniforms(e,n),this._pathVerticalPlaneData.draw(e.rctx)}_bindHeightManifoldUniforms(e,t){if(!this.heightManifoldEnabled)return;const i=this._tempVec3A,n=this._tempPlane,r=e.bindParameters.camera;this._renderCoordsHelper.worldUpAtPosition(this._heightManifoldTarget,i),te(n,this._heightManifoldTarget,i,r.viewMatrix),t.setUniform4fv("heightPlane",n)}_bindPointDistanceUniforms(e,t){if(!this._pointDistanceEnabled)return;const i=e.bindParameters.camera,n=this._tempSphere;m(n,this._pointDistanceOrigin),V(n,n,i.viewMatrix),n[3]=je(this._pointDistanceOrigin,this._pointDistanceTarget),t.setUniform4f("pointDistanceSphere",n[0],n[1],n[2],n[3])}_bindLineVerticalPlaneUniforms(e,t){if(!this._lineVerticalPlaneEnabled)return;const i=this._renderCoordsHelper,n=e.bindParameters.camera,r=this._tempPlane,f=this._tempVec3A,l=this._tempUp,o=this._tempDir,g=this._tempNormal;Fe(this._lineVerticalPlaneSegment,.5,f),i.worldUpAtPosition(f,l),T(o,this._lineVerticalPlaneSegment.vector),He(g,l,o),T(g,g),te(r,this._lineVerticalPlaneSegment.origin,g,n.viewMatrix),t.setUniform4fv("lineVerticalPlane",r);const _=this._tempVec3A;m(_,this._lineVerticalPlaneSegment.origin),i.setAltitude(_,0),V(_,_,n.viewMatrix),t.setUniform3fv("lineVerticalStart",_);const c=this._tempVec3B;J(c,this._lineVerticalPlaneSegment.origin,this._lineVerticalPlaneSegment.vector),i.setAltitude(c,0),V(c,c,n.viewMatrix),t.setUniform3fv("lineVerticalEnd",c)}_bindIntersectsLineUniforms(e,t){if(!this._intersectsLineEnabled)return;const i=mt,n=bt,r=e.bindParameters.camera;if(this._intersectsLineInfinite){if(Be(We(this._intersectsLineSegment.origin,this._intersectsLineSegment.vector),w),w.c0=-Number.MAX_VALUE,!Ge(r.frustum,w))return;ke(w,i),Xe(w,n)}else m(i,this._intersectsLineSegment.origin),J(n,this._intersectsLineSegment.origin,this._intersectsLineSegment.vector);const f=this._tempVec3A;V(f,i,r.viewMatrix),t.setUniform3fv("intersectsLineStart",f);const l=this._tempVec4;m(l,this._intersectsLineSegment.vector),this._tempVec4[3]=0,_e(this._tempVec4,this._tempVec4,r.viewMatrix),V(n,n,r.viewMatrix),t.setUniform3fv("intersectsLineEnd",n),T(l,l),t.setUniform3f("intersectsLineDirection",l[0],l[1],l[2]),t.setUniform1f("intersectsLineRadius",this._intersectsLineRadius)}_bindGlobalUniforms(e,t){const i=e.bindParameters.camera;this._heightManifoldEnabled?t.setUniform1f("maxPixelDistance",2*i.computeScreenPixelSizeAt(this._heightManifoldTarget)):this._pointDistanceEnabled?t.setUniform1f("maxPixelDistance",2*i.computeScreenPixelSizeAt(this._pointDistanceTarget)):this._lineVerticalPlaneEnabled&&t.setUniform1f("maxPixelDistance",2*i.computeScreenPixelSizeAt(this._lineVerticalPlaneSegment.origin)),t.bindTexture("frameColor",e.offscreenRenderingHelper.mainColorTexture)}_requestRender(){this._context&&this._context.requestRender()}}const w=qe(),mt=u(),bt=u();class xt extends st{constructor(e){super(e.view),this._angleCutoff=I,this._style={},this._heightManifoldTarget=u(),this._heightManifoldEnabled=!1,this._intersectsLine=q(),this._intersectsLineEnabled=!1,this._intersectsLineInfinite=!1,this._lineVerticalPlaneSegment=null,this._pathVerticalPlaneBuffers=null,this._pointDistanceLine=null,this.applyProps(e)}get testData(){return this.renderer}createResources(){this._ensureRenderer()}destroyResources(){this._disposeRenderer()}updateVisibility(){this._syncRenderer(),this._syncHeightManifold(),this._syncIntersectsLine(),this._syncPathVerticalPlane(),this._syncLineVerticalPlane(),this._syncPointDistance()}get angleCutoff(){return this._angleCutoff}set angleCutoff(e){this._angleCutoff!==e&&(this._angleCutoff=e,this._syncAngleCutoff())}get style(){return this._style}set style(e){this._style=e,this._syncStyle()}get heightManifoldTarget(){return this._heightManifoldEnabled?this._heightManifoldTarget:null}set heightManifoldTarget(e){a(e)?(m(this._heightManifoldTarget,e),this._heightManifoldEnabled=!0):this._heightManifoldEnabled=!1,this._syncRenderer(),this._syncHeightManifold()}set intersectsWorldUpAtLocation(e){if(d(e))return void(this.intersectsLine=null);const t=this.view.renderCoordsHelper.worldUpAtPosition(e,Pt);this.intersectsLine=Je(e,t),this.intersectsLineInfinite=!0}get intersectsLine(){return this._intersectsLineEnabled?this._intersectsLine:null}set intersectsLine(e){a(e)?(R(e,this._intersectsLine),this._intersectsLineEnabled=!0):this._intersectsLineEnabled=!1,this._syncIntersectsLine(),this._syncRenderer()}get intersectsLineInfinite(){return this._intersectsLineInfinite}set intersectsLineInfinite(e){this._intersectsLineInfinite=e,this._syncIntersectsLineInfinite()}get lineVerticalPlaneSegment(){return this._lineVerticalPlaneSegment}set lineVerticalPlaneSegment(e){this._lineVerticalPlaneSegment=a(e)?R(e):null,this._syncLineVerticalPlane(),this._syncRenderer()}get pathVerticalPlane(){return this._pathVerticalPlaneBuffers}set pathVerticalPlane(e){this._pathVerticalPlaneBuffers=e,this._syncPathVerticalPlane(),this._syncLineVerticalPlane(),this._syncPointDistance(),this._syncRenderer()}get pointDistanceLine(){return this._pointDistanceLine}set pointDistanceLine(e){this._pointDistanceLine=a(e)?{origin:K(e.origin),target:K(e.target)}:null,this._syncPointDistance(),this._syncRenderer()}_syncRenderer(){this.attached&&this.visible&&(this._intersectsLineEnabled||this._heightManifoldEnabled||a(this._pointDistanceLine)||a(this._pathVerticalPlaneBuffers))?this._ensureRenderer():this._disposeRenderer()}_ensureRenderer(){a(this.renderer)||(this.renderer=new gt(this.view.renderCoordsHelper,void 0,{contrastControlEnabled:!0}),this._syncStyle(),this._syncHeightManifold(),this._syncIntersectsLine(),this._syncIntersectsLineInfinite(),this._syncPathVerticalPlane(),this._syncLineVerticalPlane(),this._syncPointDistance(),this._syncAngleCutoff(),this.view._stage&&this.view._stage.addRenderPlugin(this.renderer.renderSlots,this.renderer))}_syncStyle(){d(this.renderer)||(this.renderer.setParameters(this._style),this._style.intersectsLineRadius!=null&&(this.renderer.intersectsLineRadius=this._style.intersectsLineRadius))}_syncAngleCutoff(){d(this.renderer)||this.renderer.setParameters({angleCutoff:this._angleCutoff})}_syncHeightManifold(){d(this.renderer)||(this.renderer.heightManifoldEnabled=this._heightManifoldEnabled&&this.visible,this._heightManifoldEnabled&&(this.renderer.heightManifoldTarget=this._heightManifoldTarget))}_syncIntersectsLine(){d(this.renderer)||(this.renderer.intersectsLineEnabled=this._intersectsLineEnabled&&this.visible,this._intersectsLineEnabled&&(this.renderer.intersectsLineSegment=this._intersectsLine))}_syncIntersectsLineInfinite(){d(this.renderer)||(this.renderer.intersectsLineInfinite=this._intersectsLineInfinite)}_syncPathVerticalPlane(){d(this.renderer)||(this.renderer.pathVerticalPlaneEnabled=a(this._pathVerticalPlaneBuffers)&&this.visible,a(this._pathVerticalPlaneBuffers)&&(this.renderer.pathVerticalPlaneBuffers=this._pathVerticalPlaneBuffers))}_syncLineVerticalPlane(){d(this.renderer)||(this.renderer.lineVerticalPlaneEnabled=a(this._lineVerticalPlaneSegment)&&this.visible,a(this._lineVerticalPlaneSegment)&&(this.renderer.lineVerticalPlaneSegment=this._lineVerticalPlaneSegment))}_syncPointDistance(){d(this.renderer)||(this.renderer.pointDistanceEnabled=a(this._pointDistanceLine)&&this.visible,a(this._pointDistanceLine)&&(this.renderer.pointDistanceOrigin=this._pointDistanceLine.origin,this.renderer.pointDistanceTarget=this._pointDistanceLine.target))}_disposeRenderer(){a(this.renderer)&&this.view._stage&&(this.view._stage.removeRenderPlugin(this.renderer),this.renderer=null)}}const Pt=u();class wt{constructor(e){this.resourceFactory=e,this._resources=null,this._visible=!0,this._attached=!1}destroy(){this._destroyResources()}get object(){return a(this._resources)?this._resources.object:null}get resources(){return a(this._resources)?this._resources.external:null}get visible(){return this._visible}set visible(e){e!==this._visible&&(this._visible=e,this._syncVisible())}get attached(){return this._attached}set attached(e){e!==this._attached&&(this._attached=e,this._createOrDestroyResources())}recreate(){this.attached&&this._createResources()}recreateGeometry(){if(!this.resourceFactory.recreateGeometry)return void this.recreate();const e=this.resourceFactory.view._stage;if(d(this._resources)||!e)return;const t=this._resources.object;this._resources.external.forEach(n=>{n.type===Ke.Geometry&&e.remove(n)}),t.removeAllGeometries();const i=this.resourceFactory.recreateGeometry(this._resources.external,t,this._resources.layer);e.addMany(i)}_createOrDestroyResources(){this._attached?this._resources||this._createResources():this._destroyResources()}_createResources(){this._destroyResources();const e=this.resourceFactory,t=e.view,i=t._stage;if(!i)return;const n=new Ze({isPickable:!1,updatePolicy:Qe.SYNC});i.add(n);const r=new et({castShadow:!1}),f=e.createResources(r,n);f.forEach(o=>{i.add(o),o instanceof tt&&i.loadImmediate(o)}),i.add(r),n.add(r);const l=e.cameraChanged?it(()=>t.state.camera,o=>e.cameraChanged(o),nt):null;this._resources={layer:n,object:r,external:f,cameraHandle:l},this._syncVisible()}_destroyResources(){if(d(this._resources))return;const e=this.resourceFactory.view._stage;e==null||e.remove(this._resources.object),e==null||e.remove(this._resources.layer),this._resources.external.forEach(t=>{e==null||e.remove(t),"dispose"in t&&t.dispose()}),this._resources.object.dispose(),this._resources.cameraHandle&&this._resources.cameraHandle.remove(),this._resources=null}_syncVisible(){d(this._resources)||this._resources.object.setVisible(this._visible)}}export{xt as _,I as h,ht as m,wt as u,rt as v};
