import{ku as C,jR as y,b5 as d,i_ as c,lt as w,M as u,eI as O,aE as h,kv as f,f_ as m,H as _,lu as P,lv as E,lw as M,lx as G,ly as R,eL as v}from"./vendor.fe24faac.js";import{n as b}from"./Object3DVisualElement.aec1ab10.js";class F extends b{constructor(t){super(t),this._renderOccluded=C.OccludeAndTransparent,this._width=1,this._color=y(1,0,1,1),this._innerWidth=1,this._innerColor=null,this._stipplePattern=null,this._stippleOffColor=null,this._stipplePreferContinuous=!0,this._writeDepthEnabled=!0,this._falloff=0,this._polygonOffset=!1,this.applyProps(t)}setGeometryFromRenderSpacePoint(t,r=1e3){const e=[];e.push([[t[0]-r,t[1]+0,t[2]+0],[t[0]+r,t[1]+0,t[2]+0]]),e.push([[t[0]-0,t[1]-r,t[2]+0],[t[0]+0,t[1]+r,t[2]+0]]),e.push([[t[0]-0,t[1]+0,t[2]-r],[t[0]+0,t[1]+0,t[2]+r]]),this.geometry=e}setGeometryFromExtent(t){const r=this.view.spatialReference,e=h(),s=h(),o=100,i=[];d(e,t[0],t[1],o),this.view.renderCoordsHelper.toRenderCoords(e,r,s),i.push([s[0],s[1],s[2]]),d(e,t[2],t[1],o),this.view.renderCoordsHelper.toRenderCoords(e,r,s),i.push([s[0],s[1],s[2]]),d(e,t[2],t[3],o),this.view.renderCoordsHelper.toRenderCoords(e,r,s),i.push([s[0],s[1],s[2]]),d(e,t[0],t[3],o),this.view.renderCoordsHelper.toRenderCoords(e,r,s),i.push([s[0],s[1],s[2]]),d(e,t[0],t[1],o),this.view.renderCoordsHelper.toRenderCoords(e,r,s),i.push([s[0],s[1],s[2]]),d(e,t[0],t[1],o),this.view.renderCoordsHelper.toRenderCoords(e,r,s),i.push([s[0],s[1],s[2]]),this.geometry=[i]}setGeometryFromFrustum(t){const r=[];t.lines.forEach(e=>{r.push([e.origin[0],e.origin[1],e.origin[2]]),r.push([e.endpoint[0],e.endpoint[1],e.endpoint[2]])}),this.geometry=[r]}setGeometryFromBoundedPlane(t){const r=[],e=t.origin,s=t.basis1,o=t.basis2,i=.5,n=h(),l=h(),a=h(),p=h();n[0]=e[0]-s[0]*i-o[0]*i,n[1]=e[1]-s[1]*i-o[1]*i,n[2]=e[2]-s[2]*i-o[2]*i,l[0]=e[0]-s[0]*i+o[0]*i,l[1]=e[1]-s[1]*i+o[1]*i,l[2]=e[2]-s[2]*i+o[2]*i,a[0]=e[0]+s[0]*i+o[0]*i,a[1]=e[1]+s[1]*i+o[1]*i,a[2]=e[2]+s[2]*i+o[2]*i,p[0]=e[0]+s[0]*i-o[0]*i,p[1]=e[1]+s[1]*i-o[1]*i,p[2]=e[2]+s[2]*i-o[2]*i,r.push([n[0],n[1],n[2]]),r.push([l[0],l[1],l[2]]),r.push([a[0],a[1],a[2]]),r.push([p[0],p[1],p[2]]),r.push([n[0],n[1],n[2]]),this.geometry=[r]}setGeometryFromSegment(t){const r=t.endRenderSpace;this.transform=c(g,r);const{points:e}=t.createRenderGeometry(r,this.view.renderCoordsHelper);this.geometry=[e]}setGeometryFromSegments(t,r=w){this.transform=c(g,r),this.geometry=t.map(e=>e.createRenderGeometry(r,this.view.renderCoordsHelper).points)}getTransformedGeometry(){return u(this._geometry)?null:this._geometry.map(t=>t.map(r=>O(h(),r,this.transform)))}get renderOccluded(){return this._renderOccluded}set renderOccluded(t){t!==this._renderOccluded&&(this._renderOccluded=t,this._updateMaterial())}get geometry(){return this._geometry}set geometry(t){this._geometry=t,this.recreateGeometry()}get width(){return this._width}set width(t){t!==this._width&&(this._width=t,this._updateMaterial())}get color(){return this._color}set color(t){f(t,this._color)||(m(this._color,t),this._updateMaterial())}get innerWidth(){return this._innerWidth}set innerWidth(t){t!==this._innerWidth&&(this._innerWidth=t,this._updateMaterial())}get innerColor(){return this._innerColor}set innerColor(t){_(t)?!u(this._innerColor)&&f(t,this._innerColor)||(this._innerColor=m(P(),t),this._updateMaterial()):_(this._innerColor)&&(this._innerColor=null,this._updateMaterial())}get stipplePattern(){return this._stipplePattern}set stipplePattern(t){const r=_(t)!==_(this._stipplePattern);this._stipplePattern=t,r?this.recreate():this._updateMaterial()}get stippleOffColor(){return this._stippleOffColor}set stippleOffColor(t){(u(t)||u(this._stippleOffColor)||!f(t,this._stippleOffColor))&&(this._stippleOffColor=_(t)?E(t):null,this._updateMaterial())}get stipplePreferContinuous(){return this._stipplePreferContinuous}set stipplePreferContinuous(t){this._stipplePreferContinuous!==t&&(this._stipplePreferContinuous=t,this._updateMaterial())}get writeDepthEnabled(){return this._writeDepthEnabled}set writeDepthEnabled(t){this._writeDepthEnabled!==t&&(this._writeDepthEnabled=t,this._updateMaterial())}get falloff(){return this._falloff}set falloff(t){t!==this._falloff&&(this._falloff=t,this._updateMaterial())}get polygonOffset(){return this._polygonOffset}set polygonOffset(t){t!==this._polygonOffset&&(this._polygonOffset=t,this._updateMaterial())}createExternalResources(){this._material=new M(this.materialParameters)}destroyExternalResources(){this._material=null}createGeometries(t){const r=this._createLineGeometries();if(r.length!==0)for(let e=0;e<r.length;++e){const s=G(r[e]);t.addGeometry(s,this._material)}}forEachExternalMaterial(t){t(this._material)}get materialParameters(){return{width:this._width,color:this._color,stippleOffColor:this._stippleOffColor,stipplePattern:this._stipplePattern,stipplePreferContinuous:this._stipplePreferContinuous,isClosed:!1,falloff:this._falloff,innerColor:this._innerColor,innerWidth:this._innerWidth,hasPolygonOffset:this._polygonOffset,renderOccluded:this._renderOccluded,writeDepth:this._writeDepthEnabled}}_updateMaterial(){this.attached&&this._material.setParameters(this.materialParameters)}_createLineGeometries(){const t=this.geometry;if(u(t)||t.length===0)return[];const r=[];return t.forEach(e=>{const s=e.length,o=new Float64Array(3*s);e.forEach((n,l)=>{o[3*l+0]=n[0],o[3*l+1]=n[1],o[3*l+2]=n[2]});const i={overlayInfo:null,attributeData:{position:o},removeDuplicateStartEnd:R.KEEP};r.push(i)}),r}}const g=v();export{F as C};
