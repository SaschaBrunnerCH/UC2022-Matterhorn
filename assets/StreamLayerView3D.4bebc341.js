import{z as r,A as o,B as l,cY as x,cZ as E,D as R,i1 as G,Y as m,F as d,r as M,e9 as U,V as T,aU as V,a3 as j}from"./vendor.508dc62e.js";import{t as F,h as L}from"./createConnection.1a837ee0.js";import{r as k}from"./EventedSet.b17c33f9.js";import{E as N}from"./FeatureLikeLayerView3D.fe604ac8.js";import{n as z}from"./LayerView3D.216937df.js";import{u as A}from"./LayerView.a870198e.js";import"./Graphics3DFeatureProcessor.eb36b21e.js";import"./Graphics3DScaleVisibility.fcdfba3b.js";import"./optimizedFeatureQueryEngineAdapter.af16ee02.js";import"./PooledRBush.b58f60ab.js";import"./quickselect.03306040.js";import"./Graphics3DObjectStates.53151fab.js";import"./QueryEngine.a0f78978.js";import"./QueryEngineCapabilities.c2e9875c.js";import"./attributeUtils.99d8ee08.js";import"./FeatureStore.b2668ae4.js";import"./projectExtentUtils.ee292c27.js";const C=2500;let c=class extends M{getObjectId(){return this.objectId}};r([o({type:Number,json:{read:!0}})],c.prototype,"objectId",void 0),c=r([l("esri.layers.graphics.controllers.StreamGraphic")],c);class D{constructor(e){this.onUpdate=e,this._idToGraphic=new Map}destroy(){this._idToGraphic.clear()}add(e){this._idToGraphic.set(e.objectId,e)}get(e){return this._idToGraphic.get(e)}forEach(e){this._idToGraphic.forEach(e)}removeById(e){const i=this._idToGraphic.get(e);return i?(i.sourceLayer=i.layer=null,this._idToGraphic.delete(e),i):null}update(e,i){this.onUpdate(e,i)}get size(){return this._idToGraphic.size}}let n=class extends x(E(R)){constructor(){super(...arguments),this._updateInfo={websocket:0,client:0},this.graphics=new k}initialize(){this.addResolvingPromise(this.layer.when(()=>this._startup()))}destroy(){this.clear()}_clearInterval(){this._updateIntervalId&&(clearInterval(this._updateIntervalId),this._updateIntervalId=0)}clear(){this._clearInterval(),this.connection&&(this.connection.destroy(),this.connection=null),this.store&&(this.store.destroy(),this.store=null),this.graphics.clear(),this.handles.removeAll()}get updating(){return!this.connection||this.connection.connectionStatus==="connected"}_startup(){const{layer:t,layerView:e}=this,{parsedUrl:i,spatialReference:a,definitionExpression:h,geometryDefinition:p,objectIdField:f,timeInfo:v,purgeOptions:g,maxReconnectionAttempts:_,maxReconnectionInterval:I,customParameters:w}=t,S=G.toJSON(t.geometryType),b=a,u=e.view.spatialReference,O={geometry:p,where:h};this.clear(),this._set("connection",F(i,b,u,S,O,_,I,w)),this._outSpatialReference=u.toJSON(),this.store=new D(this._onUpdate.bind(this)),this.featuresManager=new L(this.store,f,v.toJSON(),g);const y="startup-watches";this.handles.remove(y),this.handles.add([this.connection.on("feature",$=>this._onFeature($)),m(()=>[t.definitionExpression,t.geometryDefinition,t.purgeOptions],()=>this._startup())],y),this._initUpdateInterval()}_onFeature(t){this._updateInfo.websocket++,this.layerView.hasEventListener("data-received")&&this.layerView.emit("data-received",{attributes:t.attributes,centroid:t.centroid,geometry:t.geometry});try{d(t.geometry)&&!t.geometry.spatialReference&&(t.geometry.spatialReference=this._outSpatialReference);const e=c.fromJSON(t);e.sourceLayer=e.layer=this.layer,this.featuresManager.add(e)}catch{}}_onUpdate(t,e){d(e)&&this.graphics.removeMany(e),d(t)&&(this._updateInfo.client+=t.length,this.graphics.addMany(t))}_initUpdateInterval(){this._clearInterval();const{updateInterval:t}=this.layer;let e=performance.now();this._updateIntervalId=setInterval(()=>{const i=performance.now(),a=i-e;if(a>C){e=i;const h=Math.round(this._updateInfo.client/(a/1e3)),p=Math.round(this._updateInfo.websocket/(a/1e3));this._updateInfo.client=0,this._updateInfo.websocket=0,this.layerView.emit("update-rate",{client:h,websocket:p})}this.featuresManager.checkForUpdates()},t)}pauseStream(){this._clearInterval()}resumeStream(){this._initUpdateInterval()}};r([o()],n.prototype,"connection",void 0),r([o()],n.prototype,"layer",void 0),r([o()],n.prototype,"layerView",void 0),r([o({readOnly:!0})],n.prototype,"updating",null),n=r([l("esri.layers.graphics.controllers.StreamController")],n);const J=t=>{let e=class extends t{constructor(...i){super(...i),this.connectionError=null,this.connectionStatus="disconnected",this.filter=null}};return r([o({readOnly:!0})],e.prototype,"connectionError",void 0),r([o({aliasOf:"controller.connection.connectionStatus",readOnly:!0})],e.prototype,"connectionStatus",void 0),r([o({type:U})],e.prototype,"filter",void 0),e=r([l("esri.layers.mixins.StreamLayerView")],e),e};let s=class extends J(N(z(A))){constructor(){super(...arguments),this.type="stream-3d",this.updatePolicy=T.ASYNC,this.hasZ=!0,this.hasM=!1}initialize(){this.handles.add(m(()=>this.suspended,t=>{this.controller&&(t?this.controller.pauseStream():this.controller.resumeStream())}))}get connectionError(){const t=this.get("controller.connection.errorString");if(t)return new V("stream-controller",t)}createQuery(){return new j({outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference})}queryLatestObservations(t,e){return this.queryEngine.executeQueryForLatestObservations(this._ensureQuery(t),e==null?void 0:e.signal)}createController(){return new n({layer:this.layer,layerView:this})}beforeSetController(){}};r([o({readOnly:!0})],s.prototype,"updatePolicy",void 0),r([o({readOnly:!0})],s.prototype,"connectionError",null),r([o()],s.prototype,"controller",void 0),r([o({readOnly:!0})],s.prototype,"hasZ",void 0),r([o({readOnly:!0})],s.prototype,"hasM",void 0),s=r([l("esri.views.3d.layers.StreamLayerView3D")],s);const ae=s;export{ae as default};
