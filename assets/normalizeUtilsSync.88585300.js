import{bq as A,M as R,is as V,it as J,iu as S,iv as N,iw as X,gy as q,gw as z,ix as M,gR as j,iy as B,iz as D,iA as f}from"./vendor.fe24faac.js";function Q(t){return k(t,!0)}function U(t){return k(t,!1)}function k(t,i){if(R(t))return null;const n=t.spatialReference,s=V(n),e="toJSON"in t?t.toJSON():t;if(!s)return e;const h=J(n)?102100:4326,u=S[h].maxX,m=S[h].minX;if(N(e))return T(e,u,m);if(X(e))return e.points=e.points.map(o=>T(o,u,m)),e;if(q(e))return E(e,s);if(z(e)||M(e)){const o=j(G,e),r={xmin:o[0],ymin:o[1],xmax:o[2],ymax:o[3]},x=f(r.xmin,m)*(2*u),l=x===0?e:B(e,x);return r.xmin+=x,r.xmax+=x,r.xmax>u?L(l,u,i):r.xmin<m?L(l,m,i):l}return e}function E(t,i){if(!i)return t;const n=F(t,i).map(s=>s.extent);return n.length<2?n[0]||t:n.length>2?(t.xmin=i.valid[0],t.xmax=i.valid[1],t):{rings:n.map(s=>[[s.xmin,s.ymin],[s.xmin,s.ymax],[s.xmax,s.ymax],[s.xmax,s.ymin],[s.xmin,s.ymin]])}}function T(t,i,n){if(Array.isArray(t)){const s=t[0];if(s>i){const e=f(s,i);t[0]=s+e*(-2*i)}else if(s<n){const e=f(s,n);t[0]=s+e*(-2*n)}}else{const s=t.x;if(s>i){const e=f(s,i);t.x+=e*(-2*i)}else if(s<n){const e=f(s,n);t.x+=e*(-2*n)}}return t}function F(t,i){const n=[],{ymin:s,ymax:e,xmin:h,xmax:u}=t,m=t.xmax-t.xmin,[o,r]=i.valid,{x,frameId:l}=w(t.xmin,i),{x:c,frameId:p}=w(t.xmax,i),b=x===c&&m>0;if(m>2*r){const I={xmin:h<u?x:c,ymin:s,xmax:r,ymax:e},O={xmin:o,ymin:s,xmax:h<u?c:x,ymax:e},P={xmin:0,ymin:s,xmax:r,ymax:e},C={xmin:o,ymin:s,xmax:0,ymax:e},_=[],y=[];g(I,P)&&_.push(l),g(I,C)&&y.push(l),g(O,P)&&_.push(p),g(O,C)&&y.push(p);for(let d=l+1;d<p;d++)_.push(d),y.push(d);n.push(new a(I,[l]),new a(O,[p]),new a(P,_),new a(C,y))}else x>c||b?n.push(new a({xmin:x,ymin:s,xmax:r,ymax:e},[l]),new a({xmin:o,ymin:s,xmax:c,ymax:e},[p])):n.push(new a({xmin:x,ymin:s,xmax:c,ymax:e},[l]));return n}function w(t,i){const[n,s]=i.valid,e=2*s;let h,u=0;return t>s?(h=Math.ceil(Math.abs(t-s)/e),t-=h*e,u=h):t<n&&(h=Math.ceil(Math.abs(t-n)/e),t+=h*e,u=-h),{x:t,frameId:u}}function g(t,i){const{xmin:n,ymin:s,xmax:e,ymax:h}=i;return v(t,n,s)&&v(t,n,h)&&v(t,e,h)&&v(t,e,s)}function v(t,i,n){return i>=t.xmin&&i<=t.xmax&&n>=t.ymin&&n<=t.ymax}function L(t,i,n=!0){const s=!M(t);if(s&&D(t),n)return new H().cut(t,i);const e=s?t.rings:t.paths,h=s?4:2,u=e.length,m=-2*i;for(let o=0;o<u;o++){const r=e[o];if(r&&r.length>=h){const x=[];for(const l of r)x.push([l[0]+m,l[1]]);e.push(x)}}return s?t.rings=e:t.paths=e,t}class a{constructor(i,n){this.extent=i,this.frameIds=n}}const G=A();class H{constructor(){this.linesIn=[],this.linesOut=[]}cut(i,n){let s;if(this.xCut=n,i.rings)this.closed=!0,s=i.rings,this.minPts=4;else{if(!i.paths)return null;this.closed=!1,s=i.paths,this.minPts=2}for(const h of s){if(!h||h.length<this.minPts)continue;let u=!0;for(const m of h)u?(this.moveTo(m),u=!1):this.lineTo(m);this.closed&&this.close()}this._pushLineIn(),this._pushLineOut(),s=[];for(const h of this.linesIn)h&&h.length>=this.minPts&&s.push(h);const e=-2*this.xCut;for(const h of this.linesOut)if(h&&h.length>=this.minPts){for(const u of h)u[0]+=e;s.push(h)}return this.closed?i.rings=s:i.paths=s,i}moveTo(i){this._pushLineIn(),this._pushLineOut(),this._prevSide=this._side(i[0]),this._moveTo(i[0],i[1],this._prevSide),this._prevPt=i,this._firstPt=i}lineTo(i){const n=this._side(i[0]);if(n*this._prevSide==-1){const s=this._intersect(this._prevPt,i);this._lineTo(this.xCut,s,0),this._prevSide=0,this._lineTo(i[0],i[1],n)}else this._lineTo(i[0],i[1],n);this._prevSide=n,this._prevPt=i}close(){const i=this._firstPt,n=this._prevPt;i[0]===n[0]&&i[1]===n[1]||this.lineTo(i),this._checkClosingPt(this.lineIn),this._checkClosingPt(this.lineOut)}_moveTo(i,n,s){this.closed?(this.lineIn.push([s<=0?i:this.xCut,n]),this.lineOut.push([s>=0?i:this.xCut,n])):(s<=0&&this.lineIn.push([i,n]),s>=0&&this.lineOut.push([i,n]))}_lineTo(i,n,s){this.closed?(this._addPolyVertex(this.lineIn,s<=0?i:this.xCut,n),this._addPolyVertex(this.lineOut,s>=0?i:this.xCut,n)):s<0?(this._prevSide===0&&this._pushLineOut(),this.lineIn.push([i,n])):s>0?(this._prevSide===0&&this._pushLineIn(),this.lineOut.push([i,n])):this._prevSide<0?(this.lineIn.push([i,n]),this.lineOut.push([i,n])):this._prevSide>0&&(this.lineOut.push([i,n]),this.lineIn.push([i,n]))}_addPolyVertex(i,n,s){const e=i.length;e>1&&i[e-1][0]===n&&i[e-2][0]===n?i[e-1][1]=s:i.push([n,s])}_checkClosingPt(i){const n=i.length;n>3&&i[0][0]===this.xCut&&i[n-2][0]===this.xCut&&i[1][0]===this.xCut&&(i[0][1]=i[n-2][1],i.pop())}_side(i){return i<this.xCut?-1:i>this.xCut?1:0}_intersect(i,n){const s=(this.xCut-i[0])/(n[0]-i[0]);return i[1]+s*(n[1]-i[1])}_pushLineIn(){this.lineIn&&this.lineIn.length>=this.minPts&&this.linesIn.push(this.lineIn),this.lineIn=[]}_pushLineOut(){this.lineOut&&this.lineOut.length>=this.minPts&&this.linesOut.push(this.lineOut),this.lineOut=[]}}export{U as f,Q as p};
